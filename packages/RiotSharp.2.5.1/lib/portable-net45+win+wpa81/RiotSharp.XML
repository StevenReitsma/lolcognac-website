<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RiotSharp</name>
    </assembly>
    <members>
        <member name="T:RiotSharp.ChampionEndpoint.Champion">
            <summary>
            Class representing a Champion in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionEndpoint.Champion.Active">
            <summary>
            Indicates if the champion is active.
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionEndpoint.Champion.BotEnabled">
            <summary>
            Bot enabled flag (for custom games).
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionEndpoint.Champion.BotMmEnabled">
            <summary>
            Bot Match Made enabled flag (for Co-op vs. AI games).
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionEndpoint.Champion.FreeToPlay">
            <summary>
            Indicates if the champion is free to play. Free to play champions are rotated periodically.
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionEndpoint.Champion.Id">
            <summary>
            Champion ID.
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionEndpoint.Champion.RankedPlayEnabled">
            <summary>
            Ranked play enabled flag.
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionEndpoint.ChampionList.Champions">
            <summary>
            List of Champions.
            </summary>
        </member>
        <member name="T:RiotSharp.ChampionMasteryEndpoint.ChampionMastery">
            <summary>
            Class representing a champion mastery for
            specified player and champion combination (ChampionMastery API).
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionMasteryEndpoint.ChampionMastery.ChampionId">
            <summary>
            Champion ID for this entry.
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionMasteryEndpoint.ChampionMastery.ChampionLevel">
            <summary>
            Champion level for specified player and champion combination.
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionMasteryEndpoint.ChampionMastery.ChampionPoints">
            <summary>
            Total number of champion points for this player and champion combination -
            they are used to determine championLevel.
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionMasteryEndpoint.ChampionMastery.ChampionPointsSinceLastLevel">
            <summary>
            Number of points earned since current level has been achieved.
            Zero if player reached maximum champion level for this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionMasteryEndpoint.ChampionMastery.ChampionPointsUntilNextLevel">
            <summary>
            Number of points needed to achieve next level.
            Zero if player reached maximum champion level for this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionMasteryEndpoint.ChampionMastery.ChestGranted">
            <summary>
            Is chest granted for this champion or not in current season.
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionMasteryEndpoint.ChampionMastery.LastPlayTime">
            <summary>
            Last time this champion was played by this player.
            </summary>
        </member>
        <member name="P:RiotSharp.ChampionMasteryEndpoint.ChampionMastery.PlayerId">
            <summary>
            Player ID for this entry.
            </summary>
        </member>
        <member name="T:RiotSharp.CurrentGameEndpoint.BannedChampion">
            <summary>
            Class representing a BannedChampion in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.BannedChampion.ChampionId">
            <summary>
            The ID of the banned champion
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.BannedChampion.PickTurn">
            <summary>
            The turn during which the champion was banned
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.BannedChampion.TeamId">
            <summary>
            The ID of the team that banned the champion
            </summary>
        </member>
        <member name="T:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType">
            <summary>
            queueType and gameQueueConfigId subtype of CurrentGame API
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Custom">
            <summary>
            Custom games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Normal3x3">
            <summary>
            Normal 3v3 games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Normal5x5Blind">
            <summary>
            Normal 5v5 Blind Pick games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Normal5x5Draft">
            <summary>
            Normal 5v5 Draft Pick games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.RankedSolo5x5">
            <summary>
            Ranked Solo 5v5 games, deprecated.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.RankedPremade5x5">
            <summary>
            Ranked Premade 5v5 games, deprecated.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.RankedFlexTT">
            <summary>
            Used for both historical Ranked Premade 3v3 games and current Ranked Flex Twisted Treeline games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.RankedTeam3x3">
            <summary>
            Ranked Team 3v3 games, deprecated.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.RankedTeam5x5">
            <summary>
            Ranked Team 5v5 games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Odin5x5Blind">
            <summary>
            Dominion 5v5 Blind Pick games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Odin5x5Draft">
            <summary>
            Dominion 5v5 Draft Pick games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Bot5x5">
            <summary>
            Historical Summoner's Rift Coop vs AI games, deprecated.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.BotOdin5x5">
            <summary>
            Dominion Coop vs AI games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Bot5x5Intro">
            <summary>
            Summoner's Rift Coop vs AI Intro Bot games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Bot5x5Beginner">
            <summary>
            Summoner's Rift Coop vs AI Beginner Bot games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Bot5x5Intermediate">
            <summary>
            Historical Summoner's Rift Coop vs AI Intermediate Bot games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.BotTt3x3">
            <summary>
            Twisted Treeline Coop vs AI games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.GroupFinder5x5">
            <summary>
            Team Builder games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Aram5x5">
            <summary>
            ARAM games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Oneforall5x5">
            <summary>
            One for All games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Firstblood1x1">
            <summary>
            Snowdown Showdown 1v1 games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Firstblood2x2">
            <summary>
            Snowdown Showdown 2v2 games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Sr6x6">
            <summary>
            Summoner's Rift 6x6 Hexakill games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Urf5x5">
            <summary>
            Ultra Rapid Fire games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.OneForAllMirrorMode">
            <summary>
            One for All (Mirror mode).
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.BotUrf5x5">
            <summary>
            Ultra Rapid Fire games played against AI games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.NightmareBot5x5Rank1">
            <summary>
            Doom Bots Rank 1 games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.NightmareBot5x5Rank2">
            <summary>
            Doom Bots Rank 2 games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.NightmareBot5x5Rank5">
            <summary>
            Doom Bots Rank 5 games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Ascension5x5">
            <summary>
            Ascension games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Hexakill">
            <summary>
            Twisted Treeline 6x6 Hexakill games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.BilgewaterAram5x5">
            <summary>
            Butcher's Bridge games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.KingPoro5x5">
            <summary>
            King Poro games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.CounterPick">
            <summary>
            Nemesis games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Bilgewater5x5">
            <summary>
            Black Market Brawlers games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.Siege">
            <summary>
            Nexus Siege games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.DefinitelyNotDominion5x5">
            <summary>
            Definitely Not Dominion games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.ARURF5x5">
            <summary>
            All Random URF games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.TeamBuilderDraftUnranked5x5">
            <summary>
            Normal 5v5 Draft Pick games.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.TeamBuilderDraftRanked5x5">
            <summary>
            Ranked 5v5 Draft Pick games, deprecated.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.TeamBuilderRankedSolo">
            <summary>
            Ranked Solo games from current season that use Team Builder matchmaking.
            </summary>
        </member>
        <member name="F:RiotSharp.CurrentGameEndpoint.Enums.GameQueueType.RankedFlexSR">
            <summary>
            Ranked Flex Summoner's Rift games.
            </summary>
        </member>
        <member name="T:RiotSharp.CurrentGameEndpoint.CurrentGame">
            <summary>
            Class representing a CurrentGame in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.CurrentGame.BannedChampions">
            <summary>
            Banned champion information
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.CurrentGame.GameId">
            <summary>
            The ID of the game
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.CurrentGame.GameLength">
            <summary>
            The amount of time in seconds that has passed since the game started
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.CurrentGame.GameMode">
            <summary>
            Game mode.
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.CurrentGame.GameQueueType">
            <summary>
            The queue type
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.CurrentGame.GameStartTime">
            <summary>
            The game start time
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.CurrentGame.GameType">
            <summary>
            Game type.
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.CurrentGame.MapType">
            <summary>
            Map type.
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.CurrentGame.Observers">
            <summary>
            The observer information
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.CurrentGame.Participants">
            <summary>
            The participant information
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.CurrentGame.Platform">
            <summary>
            The ID of the platform on which the game is being played
            </summary>
        </member>
        <member name="T:RiotSharp.CurrentGameEndpoint.Mastery">
            <summary>
            Class representing a Mastery in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Mastery.MasteryId">
            <summary>
            The ID of the mastery
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Mastery.Rank">
            <summary>
            The number of points put into this mastery by the user
            </summary>
        </member>
        <member name="T:RiotSharp.CurrentGameEndpoint.Observer">
            <summary>
            Class representing an Observer in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Observer.EncryptionKey">
            <summary>
            Key required to pass to the LoL client to spectate a game.
            </summary>
        </member>
        <member name="T:RiotSharp.CurrentGameEndpoint.Participant">
            <summary>
            Class representing a Participant in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Participant.Bot">
            <summary>
            Flag indicating whether or not this participant is a bot
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Participant.ChampionId">
            <summary>
            The ID of the champion played by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Participant.Masteries">
            <summary>
            The masteries used by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Participant.ProfileIconId">
            <summary>
            The ID of the profile icon used by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Participant.Runes">
            <summary>
            The runes used by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Participant.SummonuerSpell1">
            <summary>
            The ID of the first summoner spell used by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Participant.SummonerSpell2">
            <summary>
            The ID of the second summoner spell used by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Participant.SummonerName">
            <summary>
            The summoner name of this participant
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Participant.TeamId">
            <summary>
            The team ID of this participant, indicating the participant's team
            </summary>
        </member>
        <member name="T:RiotSharp.CurrentGameEndpoint.Rune">
            <summary>
            Class representing a Rune in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Rune.Count">
            <summary>
            The count of this rune used by the participant
            </summary>
        </member>
        <member name="P:RiotSharp.CurrentGameEndpoint.Rune.RuneId">
            <summary>
            The ID of the rune
            </summary>
        </member>
        <member name="T:RiotSharp.FeaturedGamesEndpoint.FeaturedGames">
            <summary>
            Class representing Featured Games in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.FeaturedGamesEndpoint.FeaturedGames.ClientRefreshInterval">
            <summary>
            The suggested interval to wait before requesting FeaturedGames again
            </summary>
        </member>
        <member name="P:RiotSharp.FeaturedGamesEndpoint.FeaturedGames.GameList">
            <summary>
            The list of featured games
            </summary>
        </member>
        <member name="T:RiotSharp.GameEndpoint.Game">
            <summary>
            Class representing a Game in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.ChampionId">
            <summary>
            Champion ID associated with game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.CreateDate">
            <summary>
            Date game was played.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.FellowPlayers">
            <summary>
            Other players associated with the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.GameId">
            <summary>
            Game ID.
            <para>A gameId can be repeated over diffrent servers as they are not shared!</para>
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.GameMode">
            <summary>
            Game mode.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.GameType">
            <summary>
            Game type.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.Invalid">
            <summary>
            Invalid flag.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.IpEarned">
            <summary>
            Ip earned during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.Level">
            <summary>
            Level of the champion.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.MapType">
            <summary>
            Map type.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.SummonerSpell1">
            <summary>
            ID of first summoner spell.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.SummonerSpell2">
            <summary>
            ID of second summoner spell.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.Statistics">
            <summary>
            Statistics associated with the game for this summoner.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.GameSubType">
            <summary>
            Game sub-type.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Game.TeamId">
            <summary>
            Team ID associated with game.
            <para>Blue = 100</para>
            <para>Purple = 200</para>
            </summary>
        </member>
        <member name="T:RiotSharp.GameEndpoint.RawStat">
            <summary>
            Raw stat of a game (Game API).
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Assists">
            <summary>
            Number of assists during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.BarracksKilled">
            <summary>
            Number of barracks destroyed during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.ChampionsKilled">
            <summary>
            Number of champions killed during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.CombatPlayerScore">
            <summary>
            Combat player score, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.ConsumablesPurchased">
            <summary>
            Number of consumbables purchased during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.DamageDealtPlayer">
            <summary>
            Damages dealt to player during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.DoubleKills">
            <summary>
            Number of double kills during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.FirstBlood">
            <summary>
            First blood.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Gold">
            <summary>
            Gold.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.GoldEarned">
            <summary>
            Gold earned during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.GoldSpent">
            <summary>
            Gold spent during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Item0">
            <summary>
            Id of the first item.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Item1">
            <summary>
            Id of the second item.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Item2">
            <summary>
            Id of the third item.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Item3">
            <summary>
            Id of the fourth item.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Item4">
            <summary>
            Id of the fifth item.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Item5">
            <summary>
            Id of the sixth item.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Item6">
            <summary>
            Id of the seventh item.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.ItemsPurchased">
            <summary>
            Number of items purchased during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.KillingSprees">
            <summary>
            Number of killing sprees during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.LargestCriticalStrike">
            <summary>
            Largest criticial strike during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.LargestMultiKill">
            <summary>
            Largest multi kill during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.LegendaryItemsCreated">
            <summary>
            Number of legendary items created during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Level">
            <summary>
            Level reached by the player at the end of the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.MagicDamageDealtPlayer">
            <summary>
            Magic damage dealt by the player during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.MagicDamageDealtToChampions">
            <summary>
            Magic damage dealt by the player to champions during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.MagicDamageTaken">
            <summary>
            Magic damage taken by the player during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.MinionsDenied">
            <summary>
            Number of minions denied during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.MinionsKilled">
            <summary>
            Number of minions killed during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.NeutralMinionsKilled">
            <summary>
            Number of neutral minions killed during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.NeutralMinionsKilledEnemyJungle">
            <summary>
            Number of neutral minions killed in the enemy's jungle during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.NeutralMinionsKilledYourJungle">
            <summary>
            Number of neutral minions killed in the player's jungle during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.NexusKilled">
            <summary>
            Has the player killed the nexus?
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.NodeCapture">
            <summary>
            Number of nodes captured during the game, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.NodeCaptureAssist">
            <summary>
            Number of assists on nodes captured during the game, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.NodeNeutralize">
            <summary>
            Number of nodes neutralized during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.NodeNeutralizeAssist">
            <summary>
            Number of assists on nodes neutralized during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.NumDeaths">
            <summary>
            Number of deaths during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.NumItemsBought">
            <summary>
            Number of items bought during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.ObjectivePlayerScore">
            <summary>
            Objective score, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.PentaKills">
            <summary>
            Number of penta kills during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.PhysicalDamageDealtPlayer">
            <summary>
            Physical damage dealt by the player during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.PhysicalDamageDealtToChampions">
            <summary>
            Physical damage dealt by the player to champions during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.PhysicalDamageTaken">
            <summary>
            Physical damage taken by the player during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.QuadraKills">
            <summary>
            Number of quadra kills during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.SightWardsBought">
            <summary>
            Number of sight wards bought during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Spell1Cast">
            <summary>
            Number of casts of spell1 (Q) during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Spell2Cast">
            <summary>
            Number of casts of spell2 (W) during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Spell3Cast">
            <summary>
            Number of casts of spell3 (E) during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Spell4Cast">
            <summary>
            Number of casts of spell4 (R) during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.SummonSpell1Cast">
            <summary>
            Number of casts of summoner spell1 during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.SummonSpell2Cast">
            <summary>
            Number of casts of summoner spell2 during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.SuperMonsterKilled">
            <summary>
            Number of super monsters killed during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Team">
            <summary>
            Team.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TeamObjective">
            <summary>
            Team objective, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TimePlayed">
            <summary>
            Time played.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TotalDamageDealt">
            <summary>
            Total damage dealt by the player during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TotalDamageDealtToChampions">
            <summary>
            Total damage dealt by the player to champions during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TotalDamageTaken">
            <summary>
            Total damage taken by the player during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TotalHeal">
            <summary>
            Total health points restored by the player during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TotalPlayerScore">
            <summary>
            Total score of the player, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TotalScoreRank">
            <summary>
            Total score rank, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TotalTimeCrowdControlDealt">
            <summary>
            Amount of time of crowd control given to enemies during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TotalUnitsHealed">
            <summary>
            Number of units healed during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TripleKills">
            <summary>
            Number of triple kills.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TrueDamageDealtPlayer">
            <summary>
            True damage dealt by the player during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TrueDamageDealtToChampions">
            <summary>
            True damage dealt by the player to champions during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TrueDamageTaken">
            <summary>
            True damage taken by the player during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.TurretsKilled">
            <summary>
            Number of turrets killed by the player during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.UnrealKills">
            <summary>
            Number of unreal kills.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.VictoryPointTotal">
            <summary>
            Number of victory points in total, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.VisionWardsBought">
            <summary>
            Number of vision wards bought during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.WardKilled">
            <summary>
            Number of wards killed during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.WardPlaced">
            <summary>
            Number of wards placed during the game.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RawStat.Win">
            <summary>
            Has the player won the game?
            </summary>
        </member>
        <member name="T:RiotSharp.GameEndpoint.Enums.GameSubType">
            <summary>
            Game subtype of the game (Game API).
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.None">
            <summary>
            Custom games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.Normal">
            <summary>
            Summoner's Rift unranked games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.Bot">
            <summary>
            Summoner's Rift and Crystal Scar games played against AI.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.RankedSolo5x5">
            <summary>
            Summoner's Rift ranked solo queue games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.RankedPremade3x3">
            <summary>
            Twisted treeline ranked premade games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.RankedPremade5x5">
            <summary>
            Summoner's rift ranked premade games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.OdinUnranked">
            <summary>
            Dominion/Crystal Scar games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.RankedTeam3x3">
            <summary>
            Twisted Treeline ranked team games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.RankedTeam5x5">
            <summary>
            Summoner's Rift ranked team games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.Normal3x3">
            <summary>
            Twisted Treeline unranked games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.Bot3x3">
            <summary>
            Twisted Treeline games played against AI.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.AramUnranked5x5">
            <summary>
            ARAM/Howling Abyss games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.OneForAll5x5">
            <summary>
            One for All games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.FirstBlood1x1">
            <summary>
            Snowdown Showdown 1x1 games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.FirstBlood2x2">
            <summary>
            Snowdown Showdown 2x2 games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.Hexakill">
            <summary>
            Hexakill games
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.TeamBuilder5x5">
            <summary>
            Team Builder games
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.URF">
            <summary>
            URF games
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.URFBots">
            <summary>
            URF Bots games
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.NightmareBot">
            <summary>
            Nightmare bots games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.Ascension">
            <summary>
            Ascension mode games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.KingPoro">
            <summary>
            King Poro games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.Bilgewater">
            <summary>
            Black Market Brawlers games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.CounterPick">
            <summary>
            Counter Pick games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.RankedFlexTT">
            <summary>
            Ranked Flex Twisted Treeline games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.RankedFlexSR">
            <summary>
            Ranked Flex Summoner's Rift games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.Siege">
            <summary>
            Nexus Siege games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameEndpoint.Enums.GameSubType.SR6x6">
            <summary>
            Summoner's Rift 6x6 Hexakill games
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RecentGames.Games">
            <summary>
            A list of games for a summoner.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.RecentGames.SummonerId">
            <summary>
            The summonerId assosiated with the games.
            </summary>
        </member>
        <member name="T:RiotSharp.GameEndpoint.Player">
            <summary>
            Player in the game (Game API).
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Player.ChampionId">
            <summary>
            Champion id associated with player.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Player.SummonerId">
            <summary>
            Summoner id associated with player.
            </summary>
        </member>
        <member name="P:RiotSharp.GameEndpoint.Player.TeamId">
            <summary>
            Team id associated with player.
            <para>Blue = 100</para>
            <para>Purple = 200</para>
            </summary>
        </member>
        <member name="T:RiotSharp.ICache">
            <summary>
            Interface for caching data in-memory.
            </summary>
        </member>
        <member name="M:RiotSharp.ICache.Add``2(``0,``1,System.TimeSpan)">
            <summary>
            Add a (key, value) pair to the cache with a relative expiry time (e.g. 2 mins).
            </summary>
            <typeparam name="K">Type of the key.</typeparam>
            <typeparam name="V">Type of the value which has to be a reference type.</typeparam>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="slidingExpiry">The sliding time at the end of which the (key, value) pair should expire and
            be purged from the cache.</param>
        </member>
        <member name="M:RiotSharp.ICache.Add``2(``0,``1,System.DateTime)">
            <summary>
            Add a (key, value) pair to the cache with an absolute expiry date (e.g. 23:33:00 03/04/2030)
            </summary>
            <typeparam name="K">Type of the key.</typeparam>
            <typeparam name="V">Type of the value which has to be a reference type.</typeparam>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="absoluteExpiry">The absolute expiry date when the (key, value) pair should expire and
            be purged from the cache.</param>
        </member>
        <member name="M:RiotSharp.ICache.Get``2(``0)">
            <summary>
            Get a value from the cache.
            </summary>
            <typeparam name="K">Type of the key.</typeparam>
            <typeparam name="V">Type of the value which has to be a reference type.</typeparam>
            <param name="key">The key</param>
            <returns>The value if the key exists in the cache, null otherwise.</returns>
        </member>
        <member name="M:RiotSharp.ICache.Remove``1(``0)">
            <summary>
            Remove the value associated with the specified key from the cache.
            </summary>
            <typeparam name="K">Type of the key.</typeparam>
            <param name="key">The key.</param>
        </member>
        <member name="M:RiotSharp.ICache.Clear">
            <summary>
            Clear the cache.
            </summary>
        </member>
        <member name="M:RiotSharp.ICache.Keys``1">
            <summary>
            Enumerator for the keys of a specific type.
            </summary>
            <typeparam name="K">Type of the key.</typeparam>
            <returns>Enumerator for the keys of a specific type.</returns>
        </member>
        <member name="M:RiotSharp.ICache.Keys">
            <summary>
            Enumerator for all keys.
            </summary>
            <returns>Enumerator for all keys.</returns>
        </member>
        <member name="M:RiotSharp.ICache.Values``1">
            <summary>
            Enumerator for the values of a specific type.
            </summary>
            <typeparam name="V">Type of the value which has to be a reference type.</typeparam>
            <returns>Enumerator for the values of a specific type.</returns>
        </member>
        <member name="M:RiotSharp.ICache.Values">
            <summary>
            Enumerator for all values.
            </summary>
            <returns>Enumerator for all values.</returns>
        </member>
        <member name="M:RiotSharp.ICache.Count">
            <summary>
            Total amount of (key, value) pairs in the cache.
            </summary>
            <returns>Total amount of (key, value) pairs in the cache.</returns>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchList.EndIndex">
            <summary>
            The end index of the list of matches.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchList.Matches">
            <summary>
            List of matches for the player
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchList.StartIndex">
            <summary>
            The start index of the list of matches.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchList.TotalGames">
            <summary>
            Total number of games within the list.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.AscendedType">
            <summary>
            Ascended type.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.AscendedType.ChampionAscended">
            <summary>
            Champion ascended.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.AscendedType.ClearAscended">
            <summary>
            Clear ascended.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.AscendedType.MinionAscended">
            <summary>
            Minion ascended.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.CapturedPoint">
            <summary>
            Class representing a capture point in a dominion game (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.CapturedPoint.PointA">
            <summary>
            Point A.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.CapturedPoint.PointB">
            <summary>
            Point B.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.CapturedPoint.PointC">
            <summary>
            Point C.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.CapturedPoint.PointD">
            <summary>
            Point D.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.CapturedPoint.PointE">
            <summary>
            Point E.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.Season">
            <summary>
            Season (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Season.PreSeason3">
            <summary>
            Pre season 3.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Season.Season3">
            <summary>
            Season 3.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Season.PreSeason2014">
            <summary>
            Pre season 2014.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Season.Season2014">
            <summary>
            Season 2014.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Season.PreSeason2015">
            <summary>
            Pre season 2015.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Season.Season2015">
            <summary>
            Season 2015.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Season.PreSeason2016">
            <summary>
            Pre season 2016.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Season.Season2016">
            <summary>
            Season 2016.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Season.PreSeason2017">
            <summary>
            Pre season 2017.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Season.Season2017">
            <summary>
            Season 2017.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.BuildingType">
            <summary>
            Building type (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.BuildingType.InhibitorBuilding">
            <summary>
            Inhibitors.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.BuildingType.TowerBuilding">
            <summary>
            Towers.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.EventType">
            <summary>
            Event's type (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.EventType.AscendedEvent">
            <summary>
            Ascended event.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.EventType.BuildingKill">
            <summary>
            Triggers on building kills.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.EventType.CapturePoint">
            <summary>
            Triggers on captured point in dominion games.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.EventType.ChampionKill">
            <summary>
            Triggers on champion kills.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.EventType.EliteMonsterKill">
            <summary>
            Triggers on Nashor or Dragon kills.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.EventType.ItemDestroyed">
            <summary>
            Triggers on item destructions.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.EventType.ItemPurchased">
            <summary>
            Triggers on item purchases.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.EventType.ItemSold">
            <summary>
            Triggers on item sells.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.EventType.ItemUndo">
            <summary>
            Triggers on undo item purchases.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.EventType.SkillLevelUp">
            <summary>
            Triggers on skill level ups.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.EventType.WardKill">
            <summary>
            Triggers on ward kills.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.EventType.WardPlaced">
            <summary>
            Triggers on ward placements.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.Lane">
            <summary>
            Participant's lane (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Lane.Mid">
            <summary>
            Corresponds to mid lane.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Lane.Middle">
            <summary>
            Corresponds to mid lane.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Lane.Top">
            <summary>
            Corresponds to top lane.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Lane.Jungle">
            <summary>
            Corresponds to jungle.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Lane.Bot">
            <summary>
            Corresponds to bot lane.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Lane.Bottom">
            <summary>
            Corresponds to bot lane.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.LaneType">
            <summary>
            Lane's type (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.LaneType.BotLane">
            <summary>
            Corresponds to the bot lane.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.LaneType.MidLane">
            <summary>
            Corresponds to the mid lane.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.LaneType.TopLane">
            <summary>
            Corresponds to the top lane.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.LevelUpType">
            <summary>
            Type of level up (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.LevelUpType.Evolve">
            <summary>
            When leveling up involves evolving (notably Kha'zix).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.LevelUpType.Normal">
            <summary>
            Normal leveling up.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.MonsterType">
            <summary>
            Type of monster (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.MonsterType.BaronNashor">
            <summary>
            Corresponds to the baron Nashor.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.MonsterType.BlueGolem">
            <summary>
            Corresponds to the blue golem.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.MonsterType.Dragon">
            <summary>
            Corresponds to the dragon.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.MonsterType.RedLizard">
            <summary>
            Corresponds to the red lizard.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.MonsterType.Vilemaw">
            <summary>
            Corresponds to Vilemaw (on the 3vs3 map).
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.QueueType">
            <summary>
            Match queue type (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Custom">
            <summary>
            Custom games.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Normal5x5Blind">
            <summary>
            Normal games in blind mode 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.RankedSolo5x5">
            <summary>
            Ranked games in solo queue 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.RankedPremade5x5">
            <summary>
            Ranked games in premade 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Bot5x5">
            <summary>
            Games against bots 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Normal3x3">
            <summary>
            Normal games 3vs3.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.RankedPremade3x3">
            <summary>
            Ranked games in premade 3vs3.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Normal5x5Draft">
            <summary>
            Normal games in draft mode 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Odin5x5Blind">
            <summary>
            Dominion games in blind mode 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Odin5x5Draft">
            <summary>
            Dominion games in draft mode 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.BotOdin5x5">
            <summary>
            Dominion games against mode 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Bot5x5Intro">
            <summary>
            Introductory games against bots 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Bot5x5Beginner">
            <summary>
            Games against bots in beginner difficulty 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Bot5x5Intermediate">
            <summary>
            Games against bots in intermediate difficulty 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.RankedTeam3x3">
            <summary>
            Ranked games in team 3vs3.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.RankedTeam5x5">
            <summary>
            Ranked games in team 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.BotTt3x3">
            <summary>
            Games against bots 3vs3.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.GroupFinder5x5">
            <summary>
            Games using group finder 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Aram5x5">
            <summary>
            ARAM games 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.OneForAll5x5">
            <summary>
            One for all games 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.FirstBlood1x1">
            <summary>
            First blood mode 1vs1.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.FirstBlood2x2">
            <summary>
            First blood mode 2vs2.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Sr6x6">
            <summary>
            Hexakill games 6vs6.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Urf5x5">
            <summary>
            Ultra rapid fire games 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.BotUrf5x5">
            <summary>
            Ultra rapid fire games against bots 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.NightmareBot5x5Rank1">
            <summary>
            Games against nightmare bots rank 1 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.NightmareBot5x5Rank2">
            <summary>
            Games against nightmare bots rank2 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.NightmareBot5x5Rank5">
            <summary>
            Games against nightmare bots rank 5 5vs5.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.BilgewaterAram5x5">
            <summary>
            Butcher's Bridge games.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.Bilgewater5x5">
            <summary>
            Black Market Brawlers games.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.TeamBuilderDraftUnranked5x5">
            <summary>
            New team builder queue type in unranked.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.TeamBuilderDraftRanked5x5">
            <summary>
            New team builder queue type in ranked.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.RankedFlexSR">
            <summary>
            Ranked Flex Summoner's Rift games.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.QueueType.RankedFlexTT">
            <summary>
            Ranked Flex Twisted Treeline games.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.Role">
            <summary>
            Participant's role (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Role.Duo">
            <summary>
            Corresponds to duo lane.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Role.None">
            <summary>
            Corresponds to no role.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Role.Solo">
            <summary>
            Corresponds to solo lanes (mid or top).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Role.DuoCarry">
            <summary>
            Corresponds to ad carry.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.Role.DuoSupport">
            <summary>
            Corresponds to support.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.TowerType">
            <summary>
            Type of tower (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.TowerType.BaseTurret">
            <summary>
            Represents inhibitor turrets.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.TowerType.InnerTurret">
            <summary>
            Represents inner turrets.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.TowerType.NexusTurret">
            <summary>
            Represents nexus turrets.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.TowerType.OuterTurret">
            <summary>
            Represents outer turrets.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.TowerType.UndefinedTurret">
            <summary>
            Undefined turrets?
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Enums.WardType">
            <summary>
            Type of the ward (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.WardType.SightWard">
            <summary>
            Corresponds to green wards.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.WardType.TeemoMushroom">
            <summary>
            Corresponds to Teemo's mushrooms.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.WardType.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.WardType.VisionWard">
            <summary>
            Corresponds to pink wards.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.WardType.YellowTrinket">
            <summary>
            Corresponds to warding totems.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.WardType.YellowTrinketUpgrade">
            <summary>
            Corresponds to upgraded warding totems.
            </summary>
        </member>
        <member name="F:RiotSharp.MatchEndpoint.Enums.WardType.BlueTrinket">
            <summary>
            Corresponds to a blue trinket.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Mastery">
            <summary>
            Class representing a mastery of a participant (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Mastery.MasteryId">
            <summary>
            Mastery ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Mastery.Rank">
            <summary>
            Mastery rank.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchReference.ChampionID">
            <summary>
            The ID of the champion played during the match.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchReference.Lane">
            <summary>
            Participant's lane.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchReference.MatchID">
            <summary>
            The match ID relating to the match.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchReference.PlatformID">
            <summary>
            The ID of the platform on which the game is being played
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchReference.Queue">
            <summary>
            Match queue type.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchReference.Role">
            <summary>
            Participant's role.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchReference.Season">
            <summary>
            Season match was played.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchReference.Timestamp">
            <summary>
            The date/time of which the game lobby was created.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Rune">
            <summary>
            Class representing a rune of a participant (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Rune.Rank">
            <summary>
            Rune rank.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Rune.RuneId">
            <summary>
            Rune ID.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.BannedChampion">
            <summary>
            Class representing a banned champion (Game API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.BannedChampion.ChampionId">
            <summary>
            Banned champion ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.BannedChampion.PickTurn">
            <summary>
            Turn during which the champion was banned.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Event">
            <summary>
            Class representing a particular event during a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.AscendedType">
            <summary>
            The ascended type of the event. Only present if relevant.
            Note that CLEAR_ASCENDED refers to when a participants kills the ascended player.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.AssistingParticipantIds">
            <summary>
            The assisting participant IDs of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.BuildingType">
            <summary>
            The building type of the event (tower or inhibitor). Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.CreatorId">
            <summary>
            The creator ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.EventType">
            <summary>
            Event type (building kills, champion kills, ward placements, items purchases, etc).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.ItemAfter">
            <summary>
            The ending item ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.ItemBefore">
            <summary>
            The starting item ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.ItemId">
            <summary>
            The item ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.KillerId">
            <summary>
            The killer ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.LaneType">
            <summary>
            The lane type of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.LevelUpType">
            <summary>
            The level up type of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.MonsterType">
            <summary>
            The monster type of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.ParticipantId">
            <summary>
            The participant ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.CapturedPoint">
            <summary>
            The point captured in the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.Position">
            <summary>
            The position of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.SkillSlot">
            <summary>
            The skill slot of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.TeamId">
            <summary>
            The team ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.Timestamp">
            <summary>
            Represents how much time into the game the event occurred.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.TowerType">
            <summary>
            The tower type of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.VictimId">
            <summary>
            The victim ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Event.WardType">
            <summary>
            The ward type of the event. Only present if relevant.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Frame">
            <summary>
            Class representing a frame in a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Frame.Events">
            <summary>
            List of events for this frame.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Frame.ParticipantFrames">
            <summary>
            Map of each participant ID to the participant's information for the frame.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Frame.Timestamp">
            <summary>
            Represents how much time into the game the frame occurred.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.MatchDetail">
            <summary>
            Details about a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchDetail.Teams">
            <summary>
            Team information.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchDetail.Timeline">
            <summary>
            Match timeline data. Not included by default.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.MatchSummary">
            <summary>
            Summary of a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchSummary.MapType">
            <summary>
            Map type.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchSummary.MatchCreation">
            <summary>
            Match creation time. Designates when the team select lobby is created and/or the match is made through
            match making, not when the game actually starts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchSummary.MatchDuration">
            <summary>
            Match duration.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchSummary.MatchId">
            <summary>
            Match ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchSummary.MatchMode">
            <summary>
            Match mode.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchSummary.MatchVersion">
            <summary>
            Match version.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchSummary.ParticipantIdentities">
            <summary>
            Participants identity information.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchSummary.Participants">
            <summary>
            Participants information
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchSummary.QueueType">
            <summary>
            Match queue type.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchSummary.Region">
            <summary>
            Region where the match was played.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.MatchSummary.Season">
            <summary>
            Season match was played.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Participant">
            <summary>
            Class representing a participant in a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Participant.ChampionId">
            <summary>
            Champion ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Participant.Masteries">
            <summary>
            List of mastery information.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Participant.ParticipantId">
            <summary>
            Participant ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Participant.Runes">
            <summary>
            List of rune information.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Participant.Spell1Id">
            <summary>
            First summoner spell ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Participant.Spell2Id">
            <summary>
            Second summoner spell ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Participant.Stats">
            <summary>
            Participant statistics.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Participant.TeamId">
            <summary>
            Team ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Participant.Timeline">
            <summary>
            Timeline data.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Participant.HighestAchievedSeasonTier">
            <summary>
            Highest achieved season tier.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.ParticipantFrame">
            <summary>
            Class representing a particular frame for a participant during a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantFrame.CurrentGold">
            <summary>
            Participant's current gold.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantFrame.JungleMinionsKilled">
            <summary>
            Number of jungle minions killed by participant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantFrame.Level">
            <summary>
            Participant's current level.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantFrame.MinionsKilled">
            <summary>
            Number of minions killed by participant.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantFrame.ParticipantId">
            <summary>
            Participant ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantFrame.Position">
            <summary>
            Participant's position.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantFrame.TotalGold">
            <summary>
            Participant's total gold.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantFrame.XP">
            <summary>
            Experience earned by participant.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.ParticipantIdentity">
            <summary>
            Class representing a participant's identity in a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantIdentity.ParticipantId">
            <summary>
            Participant ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantIdentity.Player">
            <summary>
            Player information.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.ParticipantStats">
            <summary>
            Class gathering statistics about a participant (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.Assists">
            <summary>
            Number of assists.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.ChampLevel">
            <summary>
            Champion level achieved.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.CombatPlayerScore">
            <summary>
            If game was a dominion game, player's combat score, otherwise 0.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.Deaths">
            <summary>
            Number of deaths.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.DoubleKills">
            <summary>
            Number of double kills.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.FirstBloodAssist">
            <summary>
            Flag indicating if participant got an assist on first blood.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.FirstBloodKill">
            <summary>
            Flag indicating if participant got first blood.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.FirstInhibitorAssist">
            <summary>
            Flag indicating if participant got an assist on the first inhibitor.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.FirstInhibitorKill">
            <summary>
            Flag indicating if participant destroyed the first inhibitor.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.FirstTowerAssist">
            <summary>
            Flag indicating if participant got an assist on the first tower.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.FirstTowerKill">
            <summary>
            Flag indicating if participant destroyed the first tower.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.GoldEarned">
            <summary>
            Gold earned.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.GoldSpent">
            <summary>
            Gold spent.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.InhibitorKills">
            <summary>
            Numer of inhibitor kills.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.Item0">
            <summary>
            First item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.Item1">
            <summary>
            Second item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.Item2">
            <summary>
            Third item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.Item3">
            <summary>
            Fourth item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.Item4">
            <summary>
            Fifth item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.Item5">
            <summary>
            Sixth item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.Item6">
            <summary>
            Seventh item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.KillingSprees">
            <summary>
            Number of killing sprees.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.Kills">
            <summary>
            Number of kills.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.LargestCriticalStrike">
            <summary>
            Largest critical strike.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.LargestKillingSpree">
            <summary>
            Largest killing spree.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.LargestMultiKill">
            <summary>
            Largest multi kill.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.MagicDamageDealt">
            <summary>
            Magic damage dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.MagicDamageDealtToChampions">
            <summary>
            Magic damage dealt to champions.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.MagicDamageTaken">
            <summary>
            Magic damage taken.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.MinionsKilled">
            <summary>
            Minions kiled.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.NeutralMinionsKilled">
            <summary>
            Neutral minions killed.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.NeutralMinionsKilledEnemyJungle">
            <summary>
            Neutral jungle minions killed in the enemy team's jungle.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.NeutralMinionsKilledJungle">
            <summary>
            Neutral jungle minions killed in your team's jungle.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.NodeCapture">
            <summary>
            If game was a dominion game, number of node captures.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.NodeCaptureAssist">
            <summary>
            If game was a dominion game, number of node capture assists.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.NodeNeutralize">
            <summary>
            If game was a dominion game, number of node neutralizations.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.NodeNeutralizeAssist">
            <summary>
            If game was a dominion game, number of node neutralization assists.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.ObjectivePlayerScore">
            <summary>
            If game was a dominion game, player's objectives score, otherwise 0.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.PentaKills">
            <summary>
            Number of penta kills.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.PhysicalDamageDealt">
            <summary>
            Physical damage dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.PhysicalDamageDealtToChampions">
            <summary>
            Physical damage dealt to champions.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.PhysicalDamageTaken">
            <summary>
            Physical damage taken.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.QuadraKills">
            <summary>
            Number of quadra kills.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.SightWardsBoughtInGame">
            <summary>
            Number of sight wards purchased.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TeamObjective">
            <summary>
            If game was a dominion game, number of completed team objectives (i.e., quests).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TotalDamageDealt">
            <summary>
            Total damage dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TotalDamageDealtToChampions">
            <summary>
            Total damage dealt to champions.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TotalDamageTaken">
            <summary>
            Total damage taken.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TotalHeal">
            <summary>
            Total heal.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TotalPlayerScore">
            <summary>
            If game was a dominion game, player's total score, otherwise 0.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TotalScoreRank">
            <summary>
            If game was a dominion game, team rank of the player's total score (e.g., 1-5).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TotalTimeCrowdControlDealt">
            <summary>
            Total time crowd control dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TotalUnitsHealed">
            <summary>
            Total units healed.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TowerKills">
            <summary>
            Number of tower kills.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TripleKills">
            <summary>
            Number of triple kills.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TrueDamageDealt">
            <summary>
            True damage dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TrueDamageDealtToChampions">
            <summary>
            True damage dealt to champions.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.TrueDamageTaken">
            <summary>
            True damage taken.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.UnrealKills">
            <summary>
            Number of unreal kills.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.VisionWardsBoughtInGame">
            <summary>
            Number of vision wards purchased.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.WardsKilled">
            <summary>
            Number of wards killed.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.WardsPlaced">
            <summary>
            Number of wards placed.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantStats.Winner">
            <summary>
            Flag indicating whether or not the participant won.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.ParticipantTimeline">
            <summary>
            Class representing a participant's timeline (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.AncientGolemAssistsPerMinCounts">
            <summary>
            Ancient golem assists per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.AncientGolemKillsPerMinCounts">
            <summary>
            Ancient golem kills per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.AssistedLaneDeathsPerMinDeltas">
            <summary>
            Assisted lane deaths per minute timeline data.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.AssistedLaneKillsPerMinDeltas">
            <summary>
            Assisted lane kills per minute timeline data.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.BaronAssistsPerMinCounts">
            <summary>
            Baron assists per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.BaronKillsPerMinCounts">
            <summary>
            Baron kills per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.CreepsPerMinDeltas">
            <summary>
            Creeps per minute timeline data.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.CsDiffPerMinDeltas">
            <summary>
            Creep score difference per minute timeline data.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.DamageTakenDiffPerMinDeltas">
            <summary>
            Damage taken difference per minute timeline data.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.DamageTakenPerMinDeltas">
            <summary>
            Damage taken per minute timeline data.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.DragonAssistsPerMinCounts">
            <summary>
            Dragon assists per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.DragonKillsPerMinCounts">
            <summary>
            Dragon kills per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.ElderLizardAssistsPerMinCounts">
            <summary>
            Elder lizard assists per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.ElderLizardKillsPerMinCounts">
            <summary>
            Elder lizard kills per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.GoldPerMinDeltas">
            <summary>
            Gold per minute timeline data.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.InhibitorAssistsPerMinCounts">
            <summary>
            Inhibitor assists per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.InhibitorKillsPerMinCounts">
            <summary>
            Inhibitor kills per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.Lane">
            <summary>
            Participant's lane.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.Role">
            <summary>
            Participant's role.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.TowerAssistsPerMinCounts">
            <summary>
            Tower assists per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.TowerKillsPerMinCounts">
            <summary>
            Tower kills per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.TowerKillsPerMinDeltas">
            <summary>
            Tower kills per minute timeline data.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.VilemawAssistsPerMinCounts">
            <summary>
            Vilemaw assists per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.VilemawKillsPerMinCounts">
            <summary>
            Vilemaw kills per minute timeline counts.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.WardsPerMinDeltas">
            <summary>
            Wards placed per minute timeline data.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.XpDiffPerMinDeltas">
            <summary>
            Experience difference per minute timeline data.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimeline.XpPerMinDeltas">
            <summary>
            Experience per minute timeline data.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.ParticipantTimelineData">
            <summary>
            Class holding timeline values (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimelineData.TenToTwenty">
            <summary>
            Value per minute from 10 min to 20 min.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimelineData.ThirtyToEnd">
            <summary>
            Value per minute from 30 min to the end of the game.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimelineData.TwentyToThirty">
            <summary>
            Value per minute from 20 min to 30 min.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.ParticipantTimelineData.ZeroToTen">
            <summary>
            Value per minute from the beginning of the game to 10 min.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Player">
            <summary>
            Player in a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Player.MatchHistoryUri">
            <summary>
            Match history URI.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Player.ProfileIcon">
            <summary>
            Profile icon ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Player.SummonerId">
            <summary>
            Summoner ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Player.SummonerName">
            <summary>
            Summoner name.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Position">
            <summary>
            Participant's position (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Position.X">
            <summary>
            Participant's X coordinate.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Position.Y">
            <summary>
            Participant's Y coordinate.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Team">
            <summary>
            Class representing a team in a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.Bans">
            <summary>
            If game was draft mode, contains banned champion data, otherwise null.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.BaronKills">
            <summary>
            Number of times the team killed baron.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.DominionVictoryScore">
            <summary>
            If game was a dominion game, specifies the points the team had at game end, otherwise null.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.DragonKills">
            <summary>
            Number of times the team killed dragon.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.FirstBaron">
            <summary>
            Flag indicating whether or not the team got the first baron kill.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.FirstBlood">
            <summary>
            Flag indicating whether or not the team got first blood.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.FirstDragon">
            <summary>
            Flag indicating whether or not the team got the first dragon kill.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.FirstInhibitor">
            <summary>
            Flag indicating whether or not the team destroyed the first inhibitor.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.FirstTower">
            <summary>
            Flag indicating whether or not the team destroyed the first tower.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.InhibitorKills">
            <summary>
            Number of inhibitors the team destroyed.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.TeamId">
            <summary>
            Team ID.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.TowerKills">
            <summary>
            Number of towers the team destroyed.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.VilemawKills">
            <summary>
            Number of times the team killed vilemaw.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Team.Winner">
            <summary>
            Flag indicating whether or not the team won.
            </summary>
        </member>
        <member name="T:RiotSharp.MatchEndpoint.Timeline">
            <summary>
            Class representing a match's timeline (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Timeline.FrameInterval">
            <summary>
            Time between each returned frame.
            </summary>
        </member>
        <member name="P:RiotSharp.MatchEndpoint.Timeline.Frames">
            <summary>
            List of timeline frames for the game.
            </summary>
        </member>
        <member name="T:RiotSharp.GameMode">
            <summary>
            Mode of the game (Game API).
            </summary>
        </member>
        <member name="F:RiotSharp.GameMode.Classic">
            <summary>
            Classic Summoner's Rift and Twisted Treeline games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameMode.Dominion">
            <summary>
            Dominion/Crystal Scar games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameMode.Aram">
            <summary>
            ARAM games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameMode.Tutorial">
            <summary>
            Tutorial games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameMode.OneForAll">
            <summary>
            One for All games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameMode.FirstBlood">
            <summary>
            Snowdown Showdown games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameMode.Ascension">
            <summary>
            Ascension mode games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameMode.Intro">
            <summary>
            Introduction game mode.
            </summary>
        </member>
        <member name="F:RiotSharp.GameMode.KingPoro">
            <summary>
            King Poro game mode.
            </summary>
        </member>
        <member name="F:RiotSharp.GameMode.Siege">
            <summary>
            Nexus Siege game mode.
            </summary>
        </member>
        <member name="T:RiotSharp.GameType">
            <summary>
            Type of the game.
            </summary>
        </member>
        <member name="F:RiotSharp.GameType.CustomGame">
            <summary>
            Custom games.
            </summary>
        </member>
        <member name="F:RiotSharp.GameType.MatchedGame">
            <summary>
            Neither tutorial nor custom games
            </summary>
        </member>
        <member name="F:RiotSharp.GameType.TutorialGame">
            <summary>
            Tutorial games.
            </summary>
        </member>
        <member name="T:RiotSharp.MapType">
            <summary>
            Mode of the game (Game API).
            </summary>
        </member>
        <member name="F:RiotSharp.MapType.SummonersRiftSummerVariant">
            <summary>
            Summoner's Rift Summer Variant
            </summary>
        </member>
        <member name="F:RiotSharp.MapType.SummonersRiftAutumnVariant">
            <summary>
            Summoner's Rift Autumn Variant
            </summary>
        </member>
        <member name="F:RiotSharp.MapType.TheProvingGrounds">
            <summary>
            The Proving Grounds Tutorial Map
            </summary>
        </member>
        <member name="F:RiotSharp.MapType.TwistedTreelineOriginal">
            <summary>
            Twisted Treeline Original Version
            </summary>
        </member>
        <member name="F:RiotSharp.MapType.TheCrystalScar">
             <summary>
            The Crystal Scar Dominion Map
             </summary>
        </member>
        <member name="F:RiotSharp.MapType.TwistedTreelineCurrent">
            <summary>
            Twisted Treeline Current Version
            </summary>
        </member>
        <member name="F:RiotSharp.MapType.SummonersRift">
            <summary>
            Summoner's Rift Current Version
            </summary>
        </member>
        <member name="F:RiotSharp.MapType.HowlingAbyss">
            <summary>
            Howling Abyss ARAM Map
            </summary>
        </member>
        <member name="T:RiotSharp.LeagueEndpoint.League">
            <summary>
            Class representing a League in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.League.Entries">
            <summary>
            The requested league entries.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.League.Name">
            <summary>
            This name is an internal place-holder name only.
            Display and localization of names in the game client are handled client-side.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.League.ParticipantId">
            <summary>
            Specifies the relevant participant that is a member of this league (i.e., a requested summoner ID,
            a requested team ID, or the ID of a team to which one of the requested summoners belongs).
            Only present when full league is requested so that participant's entry can be identified.
            Not present when individual entry is requested.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.League.Queue">
            <summary>
            League queue (eg: RankedSolo5x5).
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.League.Tier">
            <summary>
            League tier (eg: Challenger).
            </summary>
        </member>
        <member name="T:RiotSharp.LeagueEndpoint.LeagueEntry">
            <summary>
            Team or summoner in a league (League API).
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.LeagueEntry.Division">
            <summary>
            The league division of the participant.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.LeagueEntry.IsFreshBlood">
            <summary>
            Specifies if the participant is fresh blood.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.LeagueEntry.IsHotStreak">
            <summary>
            Specifies if the participant is on a hot streak.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.LeagueEntry.IsInactive">
            <summary>
            Specifies if the participant is inactive.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.LeagueEntry.IsVeteran">
            <summary>
            Specifies if the participant is a veteran.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.LeagueEntry.LeaguePoints">
            <summary>
            The league points of the participant.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.LeagueEntry.Losses">
            <summary>
            The number of losses for the participant.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.LeagueEntry.MiniSeries">
            <summary>
            Mini series data for the participant. Only present if the participant is currently in a mini series.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.LeagueEntry.PlayerOrTeamId">
            <summary>
            The ID of the participant (i.e., summoner or team) represented by this entry.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.LeagueEntry.PlayerOrTeamName">
            <summary>
            The name of the the participant (i.e., summoner or team) represented by this entry.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.LeagueEntry.Wins">
            <summary>
            The number of wins for the participant.
            </summary>
        </member>
        <member name="T:RiotSharp.LeagueEndpoint.MiniSeries">
            <summary>
            LeagueEntry has entered a MiniSeries (League API).
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.MiniSeries.Losses">
            <summary>
            Number of current losses in the mini series.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.MiniSeries.Progress">
            <summary>
            String showing the current, sequential mini series progress where 'W' represents a win, 'L' represents a
            loss, and 'N' represents a game that hasn't been played yet.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.MiniSeries.Target">
            <summary>
            Number of wins required for promotion.
            </summary>
        </member>
        <member name="P:RiotSharp.LeagueEndpoint.MiniSeries.Wins">
            <summary>
            Number of current wins in the mini series.
            </summary>
        </member>
        <member name="T:RiotSharp.LeagueEndpoint.Enums.Tier">
            <summary>
            Tier of the league (League API).
            </summary>
        </member>
        <member name="F:RiotSharp.LeagueEndpoint.Enums.Tier.Master">
            <summary>
            Master tier.
            </summary>
        </member>
        <member name="F:RiotSharp.LeagueEndpoint.Enums.Tier.Challenger">
            <summary>
            Challenger tier.
            </summary>
        </member>
        <member name="F:RiotSharp.LeagueEndpoint.Enums.Tier.Diamond">
            <summary>
            Diamon tier.
            </summary>
        </member>
        <member name="F:RiotSharp.LeagueEndpoint.Enums.Tier.Platinum">
            <summary>
            Platinum tier.
            </summary>
        </member>
        <member name="F:RiotSharp.LeagueEndpoint.Enums.Tier.Gold">
            <summary>
            Gold tier.
            </summary>
        </member>
        <member name="F:RiotSharp.LeagueEndpoint.Enums.Tier.Silver">
            <summary>
            Silver tier.
            </summary>
        </member>
        <member name="F:RiotSharp.LeagueEndpoint.Enums.Tier.Bronze">
            <summary>
            Bronze tier.
            </summary>
        </member>
        <member name="F:RiotSharp.LeagueEndpoint.Enums.Tier.Unranked">
            <summary>
            Unranked.
            </summary>
        </member>
        <member name="T:RiotSharp.Language">
            <summary>
            Language for the data retrieved (Static API).
            </summary>
        </member>
        <member name="F:RiotSharp.Language.en_US">
            <summary>
            American English.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.en_GB">
            <summary>
            British English.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.en_PL">
            <summary>
            Polish English.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.en_AU">
            <summary>
            Australian English.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.en_PH">
            <summary>
            Filipino English.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.en_SG">
            <summary>
            Singaporean English.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.pl_PL">
            <summary>
            Polish.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.cs_CZ">
            <summary>
            Czech.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.hu_HU">
            <summary>
            Hungarian.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.de_DE">
            <summary>
            German.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.es_ES">
            <summary>
            Spanish.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.es_AR">
            <summary>
            Argentinian Spanish.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.es_MX">
            <summary>
            Latam Spanish.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.fr_FR">
            <summary>
            French.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.it_IT">
            <summary>
            Italian.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.ro_RO">
            <summary>
            Romanian.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.el_GR">
            <summary>
            Greek.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.pt_PT">
            <summary>
            Portuguese
            </summary>
        </member>
        <member name="F:RiotSharp.Language.pt_BR">
            <summary>
            Brazilian Portuguese.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.tr_TR">
            <summary>
            Turkish.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.ru_RU">
            <summary>
            Russian.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.zh_CN">
            <summary>
            Chinese.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.zh_TW">
            <summary>
            Taiwanese Chinese.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.ko_KR">
            <summary>
            Korean.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.bg_BG">
            <summary>
            Bulgarian.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.id_ID">
            <summary>
            Indonesian.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.ms_MY">
            <summary>
            Malaysian.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.zh_MY">
            <summary>
            Malaysian Chinese.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.nl_NL">
            <summary>
            Dutch.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.th_TH">
            <summary>
            Thaï.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.vn_VN">
            <summary>
            Vietnamese.
            </summary>
        </member>
        <member name="F:RiotSharp.Language.ja_JP">
            <summary>
            Japanese.
            </summary>
        </member>
        <member name="T:RiotSharp.Platform">
            <summary>
            Platform for the API.
            </summary>
        </member>
        <member name="F:RiotSharp.Platform.NA1">
            <summary>
            North America.
            </summary>
        </member>
        <member name="F:RiotSharp.Platform.BR1">
            <summary>
            Brasil.
            </summary>
        </member>
        <member name="F:RiotSharp.Platform.LA1">
            <summary>
            Latin America North.
            </summary>
        </member>
        <member name="F:RiotSharp.Platform.LA2">
            <summary>
            Latin America South.
            </summary>
        </member>
        <member name="F:RiotSharp.Platform.OC1">
            <summary>
            Oceania.
            </summary>
        </member>
        <member name="F:RiotSharp.Platform.EUN1">
            <summary>
            North-eastern Europe.
            </summary>
        </member>
        <member name="F:RiotSharp.Platform.TR1">
            <summary>
            Turkey.
            </summary>
        </member>
        <member name="F:RiotSharp.Platform.RU">
            <summary>
            Russia.
            </summary>
        </member>
        <member name="F:RiotSharp.Platform.EUW1">
            <summary>
            Western Europe.
            </summary>
        </member>
        <member name="F:RiotSharp.Platform.KR">
            <summary>
            Korea.
            </summary>
        </member>
        <member name="T:RiotSharp.Queue">
            <summary>
            Queue of the league (League API).
            </summary>
        </member>
        <member name="F:RiotSharp.Queue.RankedSolo5x5">
            <summary>
            Solo queue 5 vs 5.
            </summary>
        </member>
        <member name="F:RiotSharp.Queue.RankedTeam3x3">
            <summary>
            Team 3 vs 3.
            </summary>
        </member>
        <member name="F:RiotSharp.Queue.RankedTeam5x5">
            <summary>
            Team 5 vs 5.
            </summary>
        </member>
        <member name="F:RiotSharp.Queue.TeamBuilderDraftRanked5x5">
            <summary>
            Team 5 v 5 - Dynamic Queue - Ranked
            </summary>
        </member>
        <member name="F:RiotSharp.Queue.TeamBuilderDraftUnranked5x5">
            <summary>
            Team 5 v 5 - Dynamic Queue - Unranked
            </summary>
        </member>
        <member name="F:RiotSharp.Queue.RankedFlexSR">
            <summary>
            New Summoner's Rift ranked games.
            </summary>
        </member>
        <member name="F:RiotSharp.Queue.RankedFlexTT">
            <summary>
            New Twisted Treeline ranked games.
            </summary>
        </member>
        <member name="T:RiotSharp.Slug">
            <summary>
            Slug for the Status API.
            </summary>
        </member>
        <member name="F:RiotSharp.Slug.na">
            <summary>
            North America.
            </summary>
        </member>
        <member name="F:RiotSharp.Slug.euw">
            <summary>
            Western Europe.
            </summary>
        </member>
        <member name="F:RiotSharp.Slug.eune">
            <summary>
            North-eastern Europe.
            </summary>
        </member>
        <member name="F:RiotSharp.Slug.lan">
            <summary>
            Latin America North.
            </summary>
        </member>
        <member name="F:RiotSharp.Slug.las">
            <summary>
            Latin America South.
            </summary>
        </member>
        <member name="F:RiotSharp.Slug.br">
            <summary>
            Brasil.
            </summary>
        </member>
        <member name="F:RiotSharp.Slug.tr">
            <summary>
            Turkey.
            </summary>
        </member>
        <member name="F:RiotSharp.Slug.ru">
            <summary>
            Russia.
            </summary>
        </member>
        <member name="F:RiotSharp.Slug.oce">
            <summary>
            Oceania.
            </summary>
        </member>
        <member name="F:RiotSharp.Slug.jp">
            <summary>
            Japan.
            </summary>
        </member>
        <member name="F:RiotSharp.Slug.kr">
            <summary>
            Republic of Korea.
            </summary>
        </member>
        <member name="M:RiotSharp.Cache.Add``2(``0,``1,System.TimeSpan)">
            <summary>
            Add a (key, value) pair to the cache with a relative expiry time (e.g. 2 mins).
            </summary>
            <typeparam name="K">Type of the key.</typeparam>
            <typeparam name="V">Type of the value which has to be a reference type.</typeparam>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="slidingExpiry">The sliding time at the end of which the (key, value) pair should expire and
            be purged from the cache.</param>
        </member>
        <member name="M:RiotSharp.Cache.Add``2(``0,``1,System.DateTime)">
            <summary>
            Add a (key, value) pair to the cache with an absolute expiry date (e.g. 23:33:00 03/04/2030)
            </summary>
            <typeparam name="K">Type of the key.</typeparam>
            <typeparam name="V">Type of the value which has to be a reference type.</typeparam>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="absoluteExpiry">The absolute expiry date when the (key, value) pair should expire and
            be purged from the cache.</param>
        </member>
        <member name="M:RiotSharp.Cache.Get``2(``0)">
            <summary>
            Get a value from the cache.
            </summary>
            <typeparam name="K">Type of the key.</typeparam>
            <typeparam name="V">Type of the value which has to be a reference type.</typeparam>
            <param name="key">The key</param>
            <returns>The value if the key exists in the cache, null otherwise.</returns>
        </member>
        <member name="M:RiotSharp.Cache.Remove``1(``0)">
            <summary>
            Remove the value associated with the specified key from the cache.
            </summary>
            <typeparam name="K">Type of the key.</typeparam>
            <param name="key">The key.</param>
        </member>
        <member name="M:RiotSharp.Cache.Clear">
            <summary>
            Clear the cache.
            </summary>
        </member>
        <member name="M:RiotSharp.Cache.Keys``1">
            <summary>
            Enumerator for the keys of a specific type.
            </summary>
            <typeparam name="K">Type of the key.</typeparam>
            <returns>Enumerator for the keys of a specific type.</returns>
        </member>
        <member name="M:RiotSharp.Cache.Keys">
            <summary>
            Enumerator for all keys.
            </summary>
            <returns>Enumerator for all keys.</returns>
        </member>
        <member name="M:RiotSharp.Cache.Values``1">
            <summary>
            Enumerator for the values of a specific type.
            </summary>
            <typeparam name="V">Type of the value which has to be a reference type.</typeparam>
            <returns>Enumerator for the values of a specific type.</returns>
        </member>
        <member name="M:RiotSharp.Cache.Values">
            <summary>
            Enumerator for all values.
            </summary>
            <returns>Enumerator for all values.</returns>
        </member>
        <member name="M:RiotSharp.Cache.Count">
            <summary>
            Total amount of (key, value) pairs in the cache.
            </summary>
            <returns>Total amount of (key, value) pairs in the cache.</returns>
        </member>
        <member name="T:RiotSharp.RiotSharpException">
            <summary>
            RiotSharp exception.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.LanguageStringsStatic">
            <summary>
            Class representing data returned by the language strings endpoint (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.LanguageStringsStatic.Type">
            <summary>
            Type of data returned.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.LanguageStringsStatic.Version">
            <summary>
            Version of the dragon API.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.LanguageStringsStatic.Data">
            <summary>
            Translated strings.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MapsStatic.Data">
            <summary>
            Map of id to map.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.MapStatic">
            <summary>
            Class representing a map (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MapStatic.MapId">
            <summary>
            Map id.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MapStatic.UnpurchasableItemList">
            <summary>
            List of ids of the unpurchasable items.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MapStatic.Image">
            <summary>
            Map image.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MapStatic.MapName">
            <summary>
            Map name.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.MasteryTreeItemStatic">
            <summary>
            Class representing a mastery tree item or talent (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryTreeItemStatic.MasteryId">
            <summary>
            Id of the mastery.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryTreeItemStatic.Prerequisite">
            <summary>
            Prerequisite.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.MasteryTreeListStatic">
            <summary>
            Class representing a list of mastery trees (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryTreeListStatic.MasteryTreeItems">
            <summary>
            List of mastery tree items.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.RealmStatic">
            <summary>
            Class representing a realm (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RealmStatic.Cdn">
            <summary>
            The base CDN url.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RealmStatic.Css">
            <summary>
            Latest changed version of Dragon Magic's css file.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RealmStatic.Dd">
            <summary>
            Latest changed version of Dragon Magic.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RealmStatic.L">
            <summary>
            Default language for this realm.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RealmStatic.Lg">
            <summary>
            Legacy script mode for IE6 or older.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RealmStatic.N">
            <summary>
            Latest changed version for each data type listed.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RealmStatic.ProfileIconMax">
            <summary>
            Special behavior number identifying the largest profileicon id that can be used under 500.
            Any profileicon that is requested between this number and 500 should be mapped to 0.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RealmStatic.Store">
            <summary>
            Additional api data drawn from other sources that may be related to data dragon functionality.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RealmStatic.V">
            <summary>
            Current version of this file for this realm.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.RuneStatic">
            <summary>
            Class representing a rune (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Colloq">
            <summary>
            Equals ";".
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.ConsumOnFull">
            <summary>
            Whether the object is to be consumed on full or not.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Consumed">
            <summary>
            Whether the object is to be consumed or not.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Depth">
            <summary>
            Depth.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.From">
            <summary>
            List of object' ids which build into this one.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Gold">
            <summary>
            Value information about this item.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Group">
            <summary>
            This object's group.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.HideFromAll">
            <summary>
            Hide from all.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Id">
            <summary>
            Item's id.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Image">
            <summary>
            This object's image.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.InStore">
            <summary>
            Whether this object is in the store or not.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Into">
            <summary>
            List of object' ids this item builds into.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Maps">
            <summary>
            Maps describing on which league of legends map this object is valid.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Name">
            <summary>
            Name of the object.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.PlainText">
            <summary>
            Text describing this item.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.RequiredChampion">
            <summary>
            Required champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Metadata">
            <summary>
            Additional information if the object is a rune.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the item.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.SpecialRecipe">
            <summary>
            Id of the special recipe if there is one.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Stacks">
            <summary>
            Stacks.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Stats">
            <summary>
            Possible stats of this object.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneStatic.Tags">
            <summary>
            List of possible tags (defense, perlevel, etc).
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.BlockItemStatic">
            <summary>
            Recommended items in a block (starting, essential, offensive, etc) for a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BlockItemStatic.Count">
            <summary>
            Recommended count.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BlockItemStatic.Id">
            <summary>
            Id of the recommended item.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.BlockStatic">
            <summary>
            Block of recommended items by type (starting, essential, offensive, etc) for a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BlockStatic.Items">
            <summary>
            List of recommended items.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BlockStatic.RecMath">
            <summary>
            Rec math.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BlockStatic.Type">
            <summary>
            Type of items (starting, essential, offensive, etc).
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.ChampionStatic">
            <summary>
            Class representing a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.AllyTips">
            <summary>
            List of tips to use while playing this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Blurb">
            <summary>
            Beginning of the lore.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.EnemyTips">
            <summary>
            List of tips to use while playing against this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Id">
            <summary>
            Id of this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Image">
            <summary>
            Image of this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Info">
            <summary>
            A few statistics about this champion (attack, defense, magic, difficulty).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Key">
            <summary>
            Key of this champion.
            <para>This is diffrent from the Name attribute!
            (Name = ingame display name, Key = codebase name
            [Fiddlesticks key = FiddleSticks, Wukong key = MonkeyKing, ... ]</para>
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Lore">
            <summary>
            Lore of this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Name">
            <summary>
            Name of this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Partype">
            <summary>
            Resource type of the champion (Mana, None, Energy, Shield, Rage, Ferocity, Heat, Dragonfury, Battlefury,
            Wind).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Passive">
            <summary>
            Information about this champion's passive.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.RecommendedItems">
            <summary>
            List of recommended items for this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Skins">
            <summary>
            List of skins for this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Spells">
            <summary>
            List of spells for this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Stats">
            <summary>
            Stats of this champions.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Tags">
            <summary>
            List of tags for this champion (Mage, Assassin, Tank, Support, etc).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatic.Title">
            <summary>
            Title of this champion.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.ChampionListStatic">
            <summary>
            Class representing a list of champions (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionListStatic.Champions">
            <summary>
            Map of champions indexed by their name.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionListStatic.Format">
            <summary>
            Format of the data retrieved (always null afaik).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionListStatic.Keys">
            <summary>
            Map of the champions names indexed by their id.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionListStatic.Type">
            <summary>
            TAPI type (item).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionListStatic.Version">
            <summary>
            Version of the API.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic">
            <summary>
            Enum representing a champion's resource.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.BloodWell">
            <summary>
            BloodWell (Aatrox).
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.Battlefury">
            <summary>
            Battlefury (Tryndamere).
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.Dragonfury">
            <summary>
            Dragonfury (Shyvana).
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.Energy">
            <summary>
            Energy (Shen, Kennen, etc).
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.Ferocity">
            <summary>
            Ferocity (Rengar).
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.Gnarfury">
            <summary>
            Gnarfury (Gnar).
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.Heat">
            <summary>
            Heat (Rumble).
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.Mana">
            <summary>
            Mana.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.MP">
            <summary>
            MP (Poppy, Lux, Caitlyn, etc).
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.None">
            <summary>
            None (Vladimir, Zac, Mundo, etc).
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.Rage">
            <summary>
            Rage (Renekton).
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.Shield">
            <summary>
            Shield (Mordekaiser).
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.ParTypeStatic.Wind">
            <summary>
            Wind (Yasuo).
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.Champion.Enums.TagStatic">
            <summary>
            Enum representing a champion's type.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.TagStatic.Fighter">
            <summary>
            Fighter.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.TagStatic.Tank">
            <summary>
            Tank.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.TagStatic.Mage">
            <summary>
            Mage.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.TagStatic.Assassin">
            <summary>
            Assassin.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.TagStatic.Support">
            <summary>
            Support.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.Champion.Enums.TagStatic.Marksman">
            <summary>
            Marksman.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.ChampionData">
            <summary>
            Enum when requesting data for the Champion Static API.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.ChampionData.basic">
            <summary>
            The default. Resolves to type, version, data, id, key, name, and title
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.ItemData">
            <summary>
            Enum when requesting data for the Item Static API.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.ItemData.basic">
            <summary>
            The default. Resolves to type, version, basic, data, id, name, plaintext, group, and description
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.MasteryData">
            <summary>
            Enum when requesting data for the Mastery Static API.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.MasteryData.basic">
            <summary>
            The default. Resolves to type, version, data, id, name, and description
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.RuneData">
            <summary>
            Enum when requesting data for the Rune Static API.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.RuneData.basic">
            <summary>
            The default. Resolves to type, version, data, id, name, rune, and description
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.SummonerSpellData">
            <summary>
            Enum when requesting data for the SummonerSpell Static API.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpellData.basic">
            <summary>
            The default. Resolves to type, version, data, id, key, name, description, and summonerLevel
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.ImageStatic">
            <summary>
            Class representing an image (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ImageStatic.Full">
            <summary>
            Full name for this image.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ImageStatic.Group">
            <summary>
            Image's group (spell, champion, item, etc).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ImageStatic.Height">
            <summary>
            Image's height.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ImageStatic.Sprite">
            <summary>
            Image's sprite.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ImageStatic.Width">
            <summary>
            Image's width.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ImageStatic.X">
            <summary>
            X starting point for this image.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ImageStatic.Y">
            <summary>
            Y starting point for this image.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.InfoStatic">
            <summary>
            Basic information for a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.InfoStatic.Attack">
            <summary>
            Number between 1 and 10 representing the attack power of a champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.InfoStatic.Defense">
            <summary>
            Number between 1 and 10 representing the defense power of a champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.InfoStatic.Difficulty">
            <summary>
            Number between 1 and 10 representing the difficulty of a champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.InfoStatic.Magic">
            <summary>
            Number between 1 and 10 representing the magic power of a champion.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.LevelTipStatic">
            <summary>
            Class representing the tooltip when leveling up a spell on a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.LevelTipStatic.Effects">
            <summary>
            List of string representing the effects of leveling up this spell (going from a percentage
            to another for example.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.LevelTipStatic.Labels">
            <summary>
            List of string representing which stats will be affected by leveling up this spell.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.PassiveStatic">
            <summary>
            Class representing a champion's passive (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.PassiveStatic.Description">
            <summary>
            String descripting the passive.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.PassiveStatic.Image">
            <summary>
            Image of the passive.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.PassiveStatic.Name">
            <summary>
            Name of the passive.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.PassiveStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the passive.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.RecommendedStatic">
            <summary>
            Class representing a recommended item for a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RecommendedStatic.Blocks">
            <summary>
            List of recommended items ordered by block.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RecommendedStatic.Champion">
            <summary>
            Name of the champion for which those items are recommended.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RecommendedStatic.Map">
            <summary>
            Map id for which those items are recommended.
            <list type="table">
            <listheader><description>Possible values:</description></listheader>
            <item><term>1</term><description>Summoner's Rift: Summer Variant</description></item>
            <item><term>2</term><description>Summoner's Rift: Autumn Variant</description></item>
            <item><term>3</term><description>The Proving Grounds: Tutorial Map</description></item>
            <item><term>4</term><description>Twisted Treeline: Original Version</description></item>
            <item><term>8</term><description>The Crystal Scar: Dominion Map</description></item>
            <item><term>10</term><description>Twisted Treeline: Current Version</description></item>
            <item><term>12</term><description>Howling Abyss: ARAM Map</description></item>
            </list>
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RecommendedStatic.Mode">
            <summary>
            Mode for which those items are recommended.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RecommendedStatic.Priority">
            <summary>
            Priority of the recommended items list.
            <para>This is default false for each Riot page.
            This means players' lists will normally display when a game starts instead of Riots' pages.</para>
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RecommendedStatic.Title">
            <summary>
            Title of the items list.
            <para>(eg: Beginner / riot-beginner / VladimirHA / VladimirDM / ...)</para>
            <para>Later if costum sets are server side, we might be able to request these too.</para>
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RecommendedStatic.Type">
            <summary>
            Type of list.
            <para>(eg: riot-beginner / riot)</para>
            <para>This is probably to find out who's list it is. (Riot's' or a players')</para>
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.SkinStatic">
            <summary>
            Class representing a skin of a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SkinStatic.Id">
            <summary>
            Id of the skin.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SkinStatic.Name">
            <summary>
            Name of the skin.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SkinStatic.Num">
            <summary>
            Ordered number of the skin.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.ChampionSpellStatic">
            <summary>
            Class representing a spell of a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.Altimages">
            <summary>
            List of alternative images.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.Cooldowns">
            <summary>
            List of the cooldowns for each level of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.CooldownBurn">
            <summary>
            String representing the cooldowns for each level of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.Costs">
            <summary>
            List of the costs for each level of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.CostBurn">
            <summary>
            String representing the costs for each level of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.CostType">
            <summary>
            Type of cost (mana, energy, percentage of current health, etc).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.Description">
            <summary>
            Description of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.Effects">
            <summary>
            Effects of the spell (damage, etc). This field is a List of List of Integer.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.EffectBurns">
            <summary>
            String representing the effects of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.Image">
            <summary>
            Image of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.Key">
            <summary>
             String identifying a spell (champion's name + key to activate the spell, example: "AatroxQ".
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.LevelTip">
            <summary>
            Tooltip when leveling up this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.MaxRank">
            <summary>
            Maximum rank of this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.Name">
            <summary>
            Name of this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.Range">
            <summary>
            This field is either a List of Integer or the String 'self' for spells that target one's own champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.RangeBurn">
            <summary>
            String representing the range for each level of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.Resource">
            <summary>
            String representing the cost for the champion when using this spell (example: "{{ e3 }}% of Current
            Health".
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.SanitizedTooltip">
            <summary>
            Sanitized (HTML stripped) tooltip of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.Tooltip">
            <summary>
            Tooltip for this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionSpellStatic.Vars">
            <summary>
            Various effects of this spell.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.ChampionStatsStatic">
            <summary>
            A few statistics of a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.Armor">
            <summary>
            Base armor.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.ArmorPerLevel">
            <summary>
            Armor won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.AttackDamage">
            <summary>
            Base attack damage.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.AttackDamagePerLevel">
            <summary>
            Attack damage won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.AttackRange">
            <summary>
            Base attack range.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.AttackSpeedOffset">
            <summary>
            Base attack speed.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.AttackSpeedPerLevel">
            <summary>
            Attack speed won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.Crit">
            <summary>
            Base crit percentage.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.CritPerLevel">
            <summary>
            Crit percentage won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.Hp">
            <summary>
            Base hit points.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.HpPerLevel">
            <summary>
            Hit points won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.HpRegen">
            <summary>
            Base hit point regeneration.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.HpRegenPerLevel">
            <summary>
            Hit points regeneration per level.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.MoveSpeed">
            <summary>
            Base move speed.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.Mp">
            <summary>
            Base mana points.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.MpPerLevel">
            <summary>
            Mana points won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.MpRegen">
            <summary>
            Base mana point regeneration.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.MpRegenPerLevel">
            <summary>
            Mana point regeneration won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.SpellBlock">
            <summary>
            Base spell block.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ChampionStatsStatic.SpellBlockPerLevel">
            <summary>
            Spell block won per level.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.BasicDataStatic">
            <summary>
            Class representing some information about the items retrieved (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Colloq">
            <summary>
            Equals ";".
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.ConsumeOnFull">
            <summary>
            Whether the object is to be consumed on full or not.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Consumed">
            <summary>
            Whether the object is to be consumed or not.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Depth">
            <summary>
            Depth.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.From">
            <summary>
            List of object' ids which build into this one.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Gold">
            <summary>
            Value information about this item.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Group">
            <summary>
            This object's group.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.HideFromAll">
            <summary>
            Hide from all.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Image">
            <summary>
            This object's image.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.InStore">
            <summary>
            Whether this object is in the store or not.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Into">
            <summary>
            List of object' ids this item builds into.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Maps">
            <summary>
            Maps describing on which league of legends map this object is valid.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Name">
            <summary>
            Name of the object.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.PlainText">
            <summary>
            Text describing this item.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.RequiredChampion">
            <summary>
            Required champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Metadata">
            <summary>
            Additional information if the object is a rune.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the item.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.SpecialRecipe">
            <summary>
            Id of the special recipe if there is one.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Stacks">
            <summary>
            Stacks.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Stats">
            <summary>
            Possible stats of this object.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.BasicDataStatic.Tags">
            <summary>
            List of possible tags.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.GoldStatic">
            <summary>
            Class representing an item's value (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.GoldStatic.BasePrice">
            <summary>
            Base price of an item.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.GoldStatic.Purchasable">
            <summary>
            Whether an item is purchasable or not.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.GoldStatic.SellingPrice">
            <summary>
            Reselling price of an item.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.GoldStatic.TotalPrice">
            <summary>
            Total price of an item.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.GroupStatic">
            <summary>
            Class representing an item's group (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.GroupStatic.MaxGroupOwnable">
            <summary>
            Max group ownable.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.GroupStatic.Key">
            <summary>
            Key of the group.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.ItemListStatic">
            <summary>
            Class representing a list of items (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemListStatic.BasicData">
            <summary>
            Basic data about the items retrieved.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemListStatic.Items">
            <summary>
            Map of items indexed by their id.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemListStatic.Groups">
            <summary>
            Information about the groups of an item.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemListStatic.Trees">
            <summary>
            Items' tree (Tools, Defense, Attack, Magic, Movement).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemListStatic.Type">
            <summary>
            API type (item).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemListStatic.Version">
            <summary>
            Version of the API.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.MetadataStatic">
            <summary>
            Class representing metadata on runes and items (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MetadataStatic.IsRune">
            <summary>
            Whether this item is a rune or not.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MetadataStatic.Tier">
            <summary>
            Tier of the rune.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MetadataStatic.Type">
            <summary>
            Type of the rune.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.ItemStatic">
            <summary>
            Class representing an item (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Colloq">
            <summary>
            Equals ";".
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.ConsumOnFull">
            <summary>
            Whether the object is to be consumed on full or not.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Consumed">
            <summary>
            Whether the object is to be consumed or not.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Depth">
            <summary>
            Depth.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.From">
            <summary>
            List of object' ids which build into this one.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Gold">
            <summary>
            Value information about this item.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Group">
            <summary>
            This object's group.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.HideFromAll">
            <summary>
            Hide from all.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Id">
            <summary>
            Item's id.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Image">
            <summary>
            This object's image.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.InStore">
            <summary>
            Whether this object is in the store or not.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Into">
            <summary>
            List of object' ids this item builds into.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Maps">
            <summary>
            Maps describing on which league of legends map this object is valid.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Name">
            <summary>
            Name of the object.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.PlainText">
            <summary>
            Text describing this item.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.RequiredChampion">
            <summary>
            Required champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Metadata">
            <summary>
            Additional information if the object is a rune.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the item.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.SpecialRecipe">
            <summary>
            Id of the special recipe if there is one.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Stacks">
            <summary>
            Stacks.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Stats">
            <summary>
            Possible stats of this object.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemStatic.Tags">
            <summary>
            List of possible tags (defense, perlevel, etc).
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.RuneListStatic">
            <summary>
            Class representing a list of runes (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneListStatic.BasicData">
            <summary>
            Basic data (empty object so far).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneListStatic.Runes">
            <summary>
            Map of runes indexed by their id.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneListStatic.Type">
            <summary>
            API type (rune).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.RuneListStatic.Version">
            <summary>
            Version of the API.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.StatsStatic">
            <summary>
            Class representing stats (Static API).
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.ItemTreeStatic">
            <summary>
            Class representing an item tree in the shop (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemTreeStatic.Header">
            <summary>
            Tree's header (Tools, Defense, Attack, Magic, Movement).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.ItemTreeStatic.Tags">
            <summary>
            Tags available in this tree.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.MasteryListStatic">
            <summary>
            Class representing a list of masteries (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryListStatic.Masteries">
            <summary>
            Map of masteries indexed by their id.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryListStatic.Tree">
            <summary>
            Tree of masteries.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryListStatic.Type">
            <summary>
            API type (mastery).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryListStatic.Version">
            <summary>
            Version of the API.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.MasteryStatic">
            <summary>
            Class representing a mastery (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryStatic.Description">
            <summary>
            List of string descripting the mastery.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryStatic.Id">
            <summary>
            Mastery's id.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryStatic.Image">
            <summary>
            Mastery's image.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryStatic.Name">
            <summary>
            Mastery's name.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryStatic.Prerequisite">
            <summary>
            Id of the prerequisite mastery.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryStatic.Rank">
            <summary>
            Mastery's rank.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the mastery.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.MasteryTreeStatic">
            <summary>
            Mastery tree.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryTreeStatic.Defense">
            <summary>
            List of list of objects (masteryId, prereq) in the defense tree.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryTreeStatic.Offense">
            <summary>
            List of list of objects (masteryId, prereq) in the offense tree.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.MasteryTreeStatic.Utility">
            <summary>
            List of list of objects (masteryId, prereq) in the utility tree.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.SummonerSpell">
            <summary>
            Enum representing the different summon spells.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Barrier">
            <summary>
            Barrier.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Cleanse">
            <summary>
            Cleanse.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Clairvoyance">
            <summary>
            Clairvoyance.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Ignite">
            <summary>
            Ignite.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Exhaust">
            <summary>
            Exhaust.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Flash">
            <summary>
            Flash.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Ghost">
            <summary>
            Ghost.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Heal">
            <summary>
            Heal.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Clarity">
            <summary>
            Clarity.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Garrison">
            <summary>
            Garrison.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Revive">
            <summary>
            Revive.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Smite">
            <summary>
            Smite.
            </summary>
        </member>
        <member name="F:RiotSharp.StaticDataEndpoint.SummonerSpell.Teleport">
            <summary>
            Teleport.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.SummonerSpellListStatic">
            <summary>
            Class representing a list of summoner spells (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellListStatic.SummonerSpells">
            <summary>
            Map of summoner spells indexed by their name.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellListStatic.Type">
            <summary>
            API type (summoner).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellListStatic.Version">
            <summary>
            Version of the API.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.SummonerSpellStatic">
            <summary>
            Class representing a summoner spell (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Cooldowns">
            <summary>
            List of cooldowns for this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.CooldownBurn">
            <summary>
            String of cooldowns for this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Costs">
            <summary>
            List of costs for this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.CostBurn">
            <summary>
            String of costs for this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.CostType">
            <summary>
            Cost type (NoCost).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Description">
            <summary>
            Spell's description.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Effects">
            <summary>
            List of object representing the effects of this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.EffectBurns">
            <summary>
            String representing the effects of this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Id">
            <summary>
            Spell's id.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Image">
            <summary>
            Spell's image.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Key">
            <summary>
            Spell's key.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.LevelTip">
            <summary>
            Tooltip when leveling up this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.MaxRank">
            <summary>
            Spell's maxrank (1).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Modes">
            <summary>
            Modes this spell are available in.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Name">
            <summary>
            Spell's name.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Range">
            <summary>
            Spell's range. This field is either a List of Integer or the String 'self' for spells that target one's own champion.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.RangeBurn">
            <summary>
            Spell's range as a string.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Resource">
            <summary>
            Resource needed for this spell (NoCost).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.SanitizedTooltip">
            <summary>
            Sanitized (HTML stripped) tooltip of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.SummonerLevel">
            <summary>
            Summoner level required to use this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Tooltip">
            <summary>
            Spell's tooltip.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SummonerSpellStatic.Vars">
            <summary>
            Various information about this spell.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticDataEndpoint.SpellVarsStatic">
            <summary>
            Class representing various information about a summoner spell (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SpellVarsStatic.Coeff">
            <summary>
            Coeff for this summoner spell for the summoner's level.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SpellVarsStatic.Dyn">
            <summary>
            Seems to always be equal to + when it is present.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SpellVarsStatic.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SpellVarsStatic.Link">
            <summary>
            Link.
            </summary>
        </member>
        <member name="P:RiotSharp.StaticDataEndpoint.SpellVarsStatic.RanksWith">
            <summary>
            Ranks with.
            </summary>
        </member>
        <member name="T:RiotSharp.StaticRiotApi">
            <summary>
            Entry point for the static API.
            </summary>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetInstance(System.String)">
            <summary>
            Get the instance of StaticRiotApi.
            </summary>
            <param name="apiKey">The api key.</param>
            <returns>The instance of StaticRiotApi.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetChampions(RiotSharp.Region,RiotSharp.StaticDataEndpoint.ChampionData,RiotSharp.Language)">
            <summary>
            Get a list of all champions synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="championData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A ChampionListStatic object containing all champions.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetChampionsAsync(RiotSharp.Region,RiotSharp.StaticDataEndpoint.ChampionData,RiotSharp.Language)">
            <summary>
            Get a list of all champions asynchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="championData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A ChampionListStatic object containing all champions.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetChampion(RiotSharp.Region,System.Int32,RiotSharp.StaticDataEndpoint.ChampionData,RiotSharp.Language)">
            <summary>
            Get a champion synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="championId">Id of the champion to retrieve.</param>
            <param name="championData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A champion.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetChampionAsync(RiotSharp.Region,System.Int32,RiotSharp.StaticDataEndpoint.ChampionData,RiotSharp.Language)">
            <summary>
            Get a champion asynchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="championId">Id of the champion to retrieve.</param>
            <param name="championData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A champion.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetItems(RiotSharp.Region,RiotSharp.StaticDataEndpoint.ItemData,RiotSharp.Language)">
            <summary>
            Get a list of all items synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="itemData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>An ItemListStatic object containing all items.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetItemsAsync(RiotSharp.Region,RiotSharp.StaticDataEndpoint.ItemData,RiotSharp.Language)">
            <summary>
            Get a list of all items synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="itemData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>An ItemListStatic object containing all items.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetItem(RiotSharp.Region,System.Int32,RiotSharp.StaticDataEndpoint.ItemData,RiotSharp.Language)">
            <summary>
            Get an item synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="itemId">Id of the item to retrieve.</param>
            <param name="itemData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>An item.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetItemAsync(RiotSharp.Region,System.Int32,RiotSharp.StaticDataEndpoint.ItemData,RiotSharp.Language)">
            <summary>
            Get an item asynchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="itemId">Id of the item to retrieve.</param>
            <param name="itemData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>An item.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetLanguageStrings(RiotSharp.Region,RiotSharp.Language,System.String)">
            <summary>
            Retrieve language strings synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <param name="version">Version of the dragon API.</param>
            <returns>A object containing the language strings.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetLanguageStringsAsync(RiotSharp.Region,RiotSharp.Language,System.String)">
            <summary>
            Retrieve language strings asynchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <param name="version">Version of the dragon API.</param>
            <returns>A object containing the language strings.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetLanguages(RiotSharp.Region)">
            <summary>
            Get languages synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <returns>A list of languages.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetLanguagesAsync(RiotSharp.Region)">
            <summary>
            Get languages asynchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <returns>A list of languages.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetMaps(RiotSharp.Region,RiotSharp.Language,System.String)">
            <summary>
            Get maps synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <param name="version">Version of the dragon API.</param>
            <returns>A list of objects representing maps.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetMapsAsync(RiotSharp.Region,RiotSharp.Language,System.String)">
            <summary>
            Get maps asynchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <param name="version">Version of the dragon API.</param>
            <returns>A list of objects representing maps.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetMasteries(RiotSharp.Region,RiotSharp.StaticDataEndpoint.MasteryData,RiotSharp.Language)">
            <summary>
            Get a list of all masteries synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="masteryData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>An MasteryListStatic object containing all masteries.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetMasteriesAsync(RiotSharp.Region,RiotSharp.StaticDataEndpoint.MasteryData,RiotSharp.Language)">
            <summary>
            Get a list of all masteries asynchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="masteryData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>An MasteryListStatic object containing all masteries.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetMastery(RiotSharp.Region,System.Int32,RiotSharp.StaticDataEndpoint.MasteryData,RiotSharp.Language)">
            <summary>
            Get a mastery synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="masteryId">Id of the mastery to retrieve.</param>
            <param name="masteryData">Data to retrieve.</param>
            <param name="language">Language of th data to be retrieved.</param>
            <returns>A mastery.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetMasteryAsync(RiotSharp.Region,System.Int32,RiotSharp.StaticDataEndpoint.MasteryData,RiotSharp.Language)">
            <summary>
            Get a mastery asynchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="masteryId">Id of the mastery to retrieve.</param>
            <param name="masteryData">Data to retrieve.</param>
            <param name="language">Language of th data to be retrieved.</param>
            <returns>A mastery.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetRealm(RiotSharp.Region)">
            <summary>
            Retrieve realm data synchronously.
            </summary>
            <param name="region">Region corresponding to data to retrieve.</param>
            <returns>A realm object containing the requested information.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetRealmAsync(RiotSharp.Region)">
            <summary>
            Retrieve realm data asynchronously.
            </summary>
            <param name="region">Region corresponding to data to retrieve.</param>
            <returns>A realm object containing the requested information.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetRunes(RiotSharp.Region,RiotSharp.StaticDataEndpoint.RuneData,RiotSharp.Language)">
            <summary>
            Get a list of all runes synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="runeData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A RuneListStatic object containing all runes.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetRunesAsync(RiotSharp.Region,RiotSharp.StaticDataEndpoint.RuneData,RiotSharp.Language)">
            <summary>
            Get a list of all runes asynchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="runeData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A RuneListStatic object containing all runes.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetRune(RiotSharp.Region,System.Int32,RiotSharp.StaticDataEndpoint.RuneData,RiotSharp.Language)">
            <summary>
            Get a rune synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="runeId">Id of the rune to retrieve.</param>
            <param name="runeData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A rune.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetRuneAsync(RiotSharp.Region,System.Int32,RiotSharp.StaticDataEndpoint.RuneData,RiotSharp.Language)">
            <summary>
            Get a rune asynchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="runeId">Id of the rune to retrieve.</param>
            <param name="runeData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A rune.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetSummonerSpells(RiotSharp.Region,RiotSharp.StaticDataEndpoint.SummonerSpellData,RiotSharp.Language)">
            <summary>
            Get a list of all summoner spells synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="summonerSpellData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A SummonerSpellListStatic object containing all summoner spells.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetSummonerSpellsAsync(RiotSharp.Region,RiotSharp.StaticDataEndpoint.SummonerSpellData,RiotSharp.Language)">
            <summary>
            Get a list of all summoner spells asynchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="summonerSpellData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A SummonerSpellListStatic object containing all summoner spells.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetSummonerSpell(RiotSharp.Region,RiotSharp.StaticDataEndpoint.SummonerSpell,RiotSharp.StaticDataEndpoint.SummonerSpellData,RiotSharp.Language)">
            <summary>
            Get a summoner spell synchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="summonerSpell">Summoner spell to retrieve.</param>
            <param name="summonerSpellData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A summoner spell.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetSummonerSpellAsync(RiotSharp.Region,RiotSharp.StaticDataEndpoint.SummonerSpell,RiotSharp.StaticDataEndpoint.SummonerSpellData,RiotSharp.Language)">
            <summary>
            Get a summoner spell asynchronously.
            </summary>
            <param name="region">Region from which to retrieve the data.</param>
            <param name="summonerSpell">Summoner spell to retrieve.</param>
            <param name="summonerSpellData">Data to retrieve.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A summoner spell.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetVersions(RiotSharp.Region)">
            <summary>
            Retrieve static api version data synchronously.
            </summary>
            <param name="region">Region from which to retrieve data.</param>
            <returns>A list of versions as strings.</returns>
        </member>
        <member name="M:RiotSharp.StaticRiotApi.GetVersionsAsync(RiotSharp.Region)">
            <summary>
            Retrieve static api version data asynchronously.
            </summary>
            <param name="region">Region from which to retrieve data.</param>
            <returns>A list of versions as strings.</returns>
        </member>
        <member name="T:RiotSharp.StatsEndpoint.AggregatedStat">
            <summary>
            AggregatedStat (Stats API).
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.AverageAssists">
            <summary>
            Number of assists per game on average, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.AverageChampionsKilled">
            <summary>
            Number of champions killed per game on average, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.AverageCombatPlayerScore">
            <summary>
            Combat score per game on average, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.AverageNodeCapture">
            <summary>
            Number of nodes captured per game on average, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.AverageNodeCaptureAssist">
            <summary>
            Number of assists on nodes captured per game on average, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.AverageNodeNeutralize">
            <summary>
            Number of nodes neutralized per game on average, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.AverageNodeNeutralizeAssist">
            <summary>
            Number of assists on nodes neutralized per game on average, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.AverageNumDeaths">
            <summary>
            Number of deaths per game on average, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.AverageObjectivePlayerScore">
            <summary>
            Objective score per game on average, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.AverageTeamObjective">
            <summary>
            Number of team objectives per game on average, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.AverageTotalPlayerScore">
            <summary>
            Total score per game on average, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.BotGamesPlayed">
            <summary>
            Number of bot games played.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.KillingSpree">
            <summary>
            Number of killing sprees.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxAssists">
            <summary>
            Maximum number of assists in a game, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxChampionsKilled">
            <summary>
            Maximum number of champions killed in a game.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxCombatPlayerScore">
            <summary>
            Maximum combat player score in a game, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxLargestCriticalStrike">
            <summary>
            Largest critical strike.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxLargestKillingSpree">
            <summary>
            Largest killing spree.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxNodeCapture">
            <summary>
            Maximum number of nodes captured in a game, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxNodeCaptureAssist">
            <summary>
            Maximum number of assists on nodes captured in a game, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxNodeNeutralize">
            <summary>
            Maximum number of nodes neutralized in a game, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxNodeNeutralizeAssist">
            <summary>
            Maximum number of assists on nodes neutralized in a game, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxObjectivePlayerScore">
            <summary>
            Maximum objective score in a game, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxTeamObjective">
            <summary>
            Maximum number of team objectives in a game, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxTimePlayed">
            <summary>
            Maximum number of times played.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxTimeSpentLiving">
            <summary>
            Longest time you have spent alive in a game.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MaxTotalPlayerScore">
            <summary>
            Maximum total score in a game, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MostChampionKillsPerSession">
            <summary>
            Maximum number of champions killed per session.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.MostSpellsCast">
            <summary>
            Maximum number of spells cast per sessions.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.NormalGamesPlayed">
            <summary>
            Number of normal games played.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.RankedPremadeGamesPlayed">
            <summary>
            Number of ranked premade games played.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.RankedSoloGamesPlayed">
            <summary>
            Number of ranked solo games played.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalAssists">
            <summary>
            Total number of assists.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalChampionKills">
            <summary>
            Total number of champion kills.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalDamageDealt">
            <summary>
            Total number of damages dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalDamageTaken">
            <summary>
            Total number of damages taken.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalDoubleKills">
            <summary>
            Total number of double kills.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalFirstBlood">
            <summary>
            Total number of first bloods.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalGoldEarned">
            <summary>
            Total gold earned.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalHeal">
            <summary>
            Total heal.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalMagicDamageDealt">
            <summary>
            Total number of magic damages dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalMinionKills">
            <summary>
            Total number of minions killed.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalNeutralMinionsKilled">
            <summary>
            Total number of neutral minions killed.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalNodeCapture">
            <summary>
            Total number of nodes captured, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalNodeNeutralize">
            <summary>
            Total number of nodes neutralized, dominion only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalPentaKills">
            <summary>
            Total number of penta kills.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalPhysicalDamageDealt">
            <summary>
            Total number of physical damages dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalQuadraKills">
            <summary>
            Total number of quadra kills.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalSessionsLost">
            <summary>
            Total number of sessions lost.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalSessionsPlayed">
            <summary>
            Total number of sessions played.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalSessionsWon">
            <summary>
            Total number of sessions won.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalTripleKills">
            <summary>
            Total number of triple kills.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalTurretsKilled">
            <summary>
            Total number of turrets killed.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.AggregatedStat.TotalUnrealKills">
            <summary>
            Total number of unreal kills.
            </summary>
        </member>
        <member name="T:RiotSharp.StatsEndpoint.ChampionStat">
            <summary>
            Stat of a particular champion (League API).
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.ChampionStat.MaxNumDeaths">
            <summary>
            Maximum number of deaths, only returned for ranked stats.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.ChampionStat.TotalDeathsPerSession">
            <summary>
            Total number of deaths per session, only returned for ranked stats.
            </summary>
        </member>
        <member name="T:RiotSharp.StatsEndpoint.ChampionStats">
            <summary>
            Stats for all champions (Stats API).
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.ChampionStats.ChampionId">
            <summary>
            Champion ID. Note that champion ID 0 represents the combined stats for all champions.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.ChampionStats.Stats">
            <summary>
            Champion stats associated with the champion.
            </summary>
        </member>
        <member name="T:RiotSharp.StatsEndpoint.PlayerStatsSummary">
            <summary>
            Stats summary of a player (Stats API).
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.PlayerStatsSummary.AggregatedStats">
            <summary>
            Aggregated stats.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.PlayerStatsSummary.Losses">
            <summary>
            Number of losses for this queue type. Returned for ranked queue types only.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.PlayerStatsSummary.ModifyDate">
            <summary>
            Date stats were last modified specified as epoch milliseconds.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.PlayerStatsSummary.PlayerStatSummaryType">
            <summary>
            Player stats summary type.
            </summary>
        </member>
        <member name="P:RiotSharp.StatsEndpoint.PlayerStatsSummary.Wins">
            <summary>
            Number of wins for this queue type.
            </summary>
        </member>
        <member name="T:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType">
            <summary>
            Type of player stats (Stats API).
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.AramUnranked5x5">
            <summary>
            ARAM/Howling Abyss games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.CAP5x5">
            <summary>
            Team Builder games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.CoopVsAI">
            <summary>
            Summoner's Rift and Crystal Scar games played against AI.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.CoopVsAI3x3">
            <summary>
            Twisted Treeline games played against AI.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.OdinUnranked">
            <summary>
            Dominion/Crystal Scar games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.RankedPremade3x3">
            <summary>
            Twisted Treeline ranked premade games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.RankedPremade5x5">
            <summary>
            Summoner's Rift ranked premade games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.RankedSolo5x5">
            <summary>
            Summoner's Rift ranked solo queue games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.RankedTeam3x3">
            <summary>
            Twisted Treeline ranked team games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.RankedTeam5x5">
            <summary>
            Summoner's Rift ranked team games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.Unranked">
            <summary>
            Summoner's Rift unranked games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.Unranked3x3">
            <summary>
            Twisted Treeline unranked games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.OneForAll5x5">
            <summary>
            One for All games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.FirstBlood1x1">
            <summary>
            Snowdown Showdown 1x1 games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.FirstBlood2x2">
            <summary>
            Snowdown Showdown 2x2 games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.SummonersRift6x6">
            <summary>
            Summoner's Rift 6x6 Hexakill games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.URF">
            <summary>
            Ultra Rapid Fire games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.URFBots">
            <summary>
            Ultra Rapid Fire games played against AI.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.NightmareBot">
            <summary>
            Summoner's Rift games played against Nightmare AI.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.Ascension">
            <summary>
            Ascension games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.Hexakill">
            <summary>
            Twisted Treeline 6x6 Hexakill games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.KingPoro">
            <summary>
            King Poro games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.CounterPick">
            <summary>
            Nemesis games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.Bilgewater">
            <summary>
            Black Market Brawlers games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.Siege">
            <summary>
            Siege games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.RankedFlexSR">
            <summary>
            New Summoner's Rift ranked games.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Enums.PlayerStatsSummaryType.RankedFlexTT">
            <summary>
            New Twisted Treeline ranked games.
            </summary>
        </member>
        <member name="T:RiotSharp.StatsEndpoint.Season">
            <summary>
            Season (Stats API).
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Season.Season3">
            <summary>
            Season 3.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Season.Season2014">
            <summary>
            Season 2014.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Season.Season2015">
            <summary>
            Season 2015.
            </summary>
        </member>
        <member name="F:RiotSharp.StatsEndpoint.Season.Season2016">
            <summary>
            Season 2016.
            </summary>
        </member>
        <member name="T:RiotSharp.StatusEndpoint.Incident">
            <summary>
            Class representing an incident inside a service (Status API).
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Incident.Active">
            <summary>
            Whether or not this incident is still active.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Incident.CreatedAt">
            <summary>
            Date at which point the incident was logged.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Incident.Id">
            <summary>
            Id of the incident.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Incident.Updates">
            <summary>
            List of updates for this incident.
            </summary>
        </member>
        <member name="T:RiotSharp.StatusEndpoint.Message">
            <summary>
            Class representing messages for an incident (Status API).
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Message.Author">
            <summary>
            Author of the message.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Message.Content">
            <summary>
            Content of the message.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Message.CreatedAt">
            <summary>
            Date at which point the message was created.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Message.Id">
            <summary>
            Id of the message.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Message.Severity">
            <summary>
            Severity of the messaage.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Message.Translations">
            <summary>
            List of available translations for this message.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Message.UpdatedAt">
            <summary>
            Date at which point the message was last updated.
            </summary>
        </member>
        <member name="T:RiotSharp.StatusEndpoint.Service">
            <summary>
            Class representing a service (Status API).
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Service.Incidents">
            <summary>
            List of incidents for this service.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Service.Name">
            <summary>
            Name of the service.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Service.Slug">
            <summary>
            Slug.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Service.Status">
            <summary>
            Service's status.
            </summary>
        </member>
        <member name="T:RiotSharp.StatusEndpoint.Shard">
            <summary>
            Class representing a shard (Status API).
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Shard.Hostname">
            <summary>
            Hostname of the shard.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Shard.Locales">
            <summary>
            List of locales supported by this shard.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Shard.Name">
            <summary>
            Name of the region the shard is handling.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Shard.RegionTag">
            <summary>
            Tag of the region the shard is handling.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Shard.Slug">
            <summary>
            Slug.
            </summary>
        </member>
        <member name="T:RiotSharp.StatusEndpoint.ShardStatus">
            <summary>
            Class representing a shard's status (Status API).
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.ShardStatus.Services">
            <summary>
            List of services for this shard.
            </summary>
        </member>
        <member name="T:RiotSharp.StatusEndpoint.Translation">
            <summary>
            Class representing a translation of a message (Status API).
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Translation.Content">
            <summary>
            Translated content of the message.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Translation.Locale">
            <summary>
            Language in which the translation was done.
            </summary>
        </member>
        <member name="P:RiotSharp.StatusEndpoint.Translation.UpdatedAt">
            <summary>
            Date at which point the translation was last updated.
            </summary>
        </member>
        <member name="T:RiotSharp.StatusRiotApi">
            <summary>
            Entry point for the status API.
            </summary>
        </member>
        <member name="M:RiotSharp.StatusRiotApi.GetInstance">
            <summary>
            Get the instance of StatusRiotApi.
            </summary>
            <returns>The instance of StatusRiotApi.</returns>
        </member>
        <member name="M:RiotSharp.StatusRiotApi.GetShards">
            <summary>
            Get the list of shards synchronously.
            </summary>
            <returns>A list of shards.</returns>
        </member>
        <member name="M:RiotSharp.StatusRiotApi.GetShardsAsync">
            <summary>
            Get the list of shards asynchronously.
            </summary>
            <returns>A list of shards.</returns>
        </member>
        <member name="M:RiotSharp.StatusRiotApi.GetShardStatus(RiotSharp.Region)">
            <summary>
            Get shard status synchronously.
            Returns the data available on the status.leagueoflegends.com website for the given region.
            </summary>
            <param name="region">Region for which to check the status.</param>
            <returns>A shard status object containing different information regarding the shard.</returns>
        </member>
        <member name="M:RiotSharp.StatusRiotApi.GetShardStatusAsync(RiotSharp.Region)">
            <summary>
            Get shard status asynchronously.
            Returns the data available on the status.leagueoflegends.com website for the given region.
            </summary>
            <param name="region">Region for which to check the status.</param>
            <returns>A shard status object containing different information regarding the shard.</returns>
        </member>
        <member name="T:RiotSharp.SummonerEndpoint.Mastery">
            <summary>
            Class representing a Mastery in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.Mastery.Id">
            <summary>
            Mastery id.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.Mastery.Rank">
            <summary>
            Mastery rank (i.e. the number of points put into this mastery).
            </summary>
        </member>
        <member name="T:RiotSharp.SummonerEndpoint.MasteryPage">
            <summary>
            Mastery page (Summoner API).
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.MasteryPage.Current">
            <summary>
            Indicates if the mastery page is the current mastery page.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.MasteryPage.Id">
            <summary>
            Mastery page id.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.MasteryPage.Name">
            <summary>
            Mastery page name.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.MasteryPage.Masteries">
            <summary>
            List of mastery page talents associated with the mastery page.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.MasteryPages.Pages">
            <summary>
            List of MasteryPages.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.MasteryPages.SummonerId">
            <summary>
            Summoner ID to wich the pages belong.
            </summary>
        </member>
        <member name="T:RiotSharp.SummonerEndpoint.RunePage">
            <summary>
            Page of runes (Summoner API).
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.RunePage.Current">
            <summary>
            Indicates if the page is the current page.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.RunePage.Id">
            <summary>
            Rune page ID.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.RunePage.Name">
            <summary>
            Rune page name.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.RunePage.Slots">
            <summary>
            List of rune slots associated with the rune page.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.RunePages.Pages">
            <summary>
            List of RunePages;
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.RunePages.SummonerId">
            <summary>
            Summoner ID to wich the pages belong.
            </summary>
        </member>
        <member name="T:RiotSharp.SummonerEndpoint.RuneSlot">
            <summary>
            Slot for a rune (Summoner API).
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.RuneSlot.RuneId">
            <summary>
            Rune ID associated with the rune slot.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.RuneSlot.RuneSlotId">
            <summary>
            <para>Rune slot ID.</para>
            <para>Valid: 1 - 30</para>
            </summary>
        </member>
        <member name="T:RiotSharp.SummonerEndpoint.Summoner">
            <summary>
            Class representing a Summoner in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.Summoner.ProfileIconId">
            <summary>
            ID of the summoner icon associated with the summoner.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.Summoner.RevisionDate">
            <summary>
            Date summoner was last modified.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.Summoner.Level">
            <summary>
            Summoner level associated with the summoner.
            </summary>
        </member>
        <member name="T:RiotSharp.SummonerEndpoint.SummonerBase">
            <summary>
            Class representing the name and id of a Summoner in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.SummonerBase.Id">
            <summary>
            Summoner ID.
            </summary>
        </member>
        <member name="P:RiotSharp.SummonerEndpoint.SummonerBase.Name">
            <summary>
            Summoner name.
            </summary>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetRunePages">
            <summary>
            Get rune pages for this summoner synchronously.
            </summary>
            <returns>A list of rune pages.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetRunePagesAsync">
            <summary>
            Get rune pages for this summoner asynchronously.
            </summary>
            <returns>A list of rune pages.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetMasteryPages">
            <summary>
            Get mastery pages for this summoner synchronously.
            </summary>
            <returns>A list of mastery pages.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetMasteryPagesAsync">
            <summary>
            Get mastery pages for this summoner asynchronously.
            </summary>
            <returns>A list of mastery pages.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetRecentGames">
            <summary>
            Get the 10 most recent games for this summoner synchronously.
            </summary>
            <returns>A list of the 10 most recent games.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetRecentGamesAsync">
            <summary>
            Get the 10 most recent games for this summoner asynchronously.
            </summary>
            <returns>A list of the 10 most recent games.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetLeagues">
            <summary>
            Retrieve the league items for this specific summoner and not the entire league.
            </summary>
            <returns>A list of league items for each league the summoner is in.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetLeaguesAsync">
            <summary>
            Retrieve the league items for this specific summoner and not the entire league asynchronously.
            </summary>
            <returns>A list of league items for each league the summoner is in.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetEntireLeagues">
            <summary>
            Retrieves leagues data for this summoner, including leagues for all of this summoner's teams synchronously.
            </summary>
            <returns>List of leagues.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetEntireLeaguesAsync">
            <summary>
            Retrieves leagues data for this summoner, including leagues for all of this summoner's
            teams asynchronously.
            </summary>
            <returns>List of leagues.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetStatsSummaries">
            <summary>
            Get player stats summaries for this summoner synchronously, for the current season.
            One summary is returned per queue type.
            </summary>
            <returns>A list of player stats summaries.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetStatsSummaries(RiotSharp.StatsEndpoint.Season)">
            <summary>
            Get player stats summaries for this summoner synchronously. One summary is returned per queue type.
            </summary>
            <param name="season">Season for which you want the stats.</param>
            <returns>A list of player stats summaries.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetStatsSummariesAsync">
            <summary>
            Get player stats summaries for this summoner asynchronously, for the current season.
            One summary is returned per queue type.
            </summary>
            <returns>A list of player stats summaries.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetStatsSummariesAsync(RiotSharp.StatsEndpoint.Season)">
            <summary>
            Get player stats summaries for this summoner asynchronously. One summary is returned per queue type.
            </summary>
            <param name="season">Season for which you want the stats.</param>
            <returns>A list of player stats summaries.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetStatsRanked">
            <summary>
            Get ranked stats for this summoner synchronously, for the current season.
            Includes statistics for Twisted Treeline and Summoner's Rift.
            </summary>
            <returns>A list of champions stats.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetStatsRanked(RiotSharp.StatsEndpoint.Season)">
            <summary>
            Get ranked stats for this summoner synchronously.
            Includes statistics for Twisted Treeline and Summoner's Rift.
            </summary>
            <param name="season">Season for which you want the stats.</param>
            <returns>A list of champions stats.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetStatsRankedAsync">
            <summary>
            Get ranked stats for this summoner asynchronously, for the current season.
            Includes statistics for Twisted Treeline and Summoner's Rift.
            </summary>
            <returns>A list of champions stats.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetStatsRankedAsync(RiotSharp.StatsEndpoint.Season)">
            <summary>
            Get ranked stats for this summoner asynchronously.
            Includes statistics for Twisted Treeline and Summoner's Rift.
            </summary>
            <param name="season">Season for which you want the stats.</param>
            <returns>A list of champions stats.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetTeams">
            <summary>
            Get team information for this summoner synchronously.
            </summary>
            <returns>List of teams.</returns>
        </member>
        <member name="M:RiotSharp.SummonerEndpoint.SummonerBase.GetTeamsAsync">
            <summary>
            Get team information for this summoner asynchronously.
            </summary>
            <returns>List of teams.</returns>
        </member>
        <member name="T:RiotSharp.Region">
            <summary>
            Region for the API.
            </summary>
        </member>
        <member name="F:RiotSharp.Region.br">
            <summary>
            Brasil.
            </summary>
        </member>
        <member name="F:RiotSharp.Region.eune">
            <summary>
            North-eastern europe.
            </summary>
        </member>
        <member name="F:RiotSharp.Region.euw">
            <summary>
            Western europe.
            </summary>
        </member>
        <member name="F:RiotSharp.Region.na">
            <summary>
            North america.
            </summary>
        </member>
        <member name="F:RiotSharp.Region.kr">
            <summary>
            South korea.
            </summary>
        </member>
        <member name="F:RiotSharp.Region.lan">
            <summary>
            Latin America North.
            </summary>
        </member>
        <member name="F:RiotSharp.Region.las">
            <summary>
            Latin America South.
            </summary>
        </member>
        <member name="F:RiotSharp.Region.oce">
            <summary>
            Oceania.
            </summary>
        </member>
        <member name="F:RiotSharp.Region.ru">
            <summary>
            Russia.
            </summary>
        </member>
        <member name="F:RiotSharp.Region.tr">
            <summary>
            Turkey.
            </summary>
        </member>
        <member name="F:RiotSharp.Region.global">
            <summary>
            Global.
            </summary>
        </member>
        <member name="T:RiotSharp.RiotApi">
            <summary>
            Entry point for the API.
            </summary>
        </member>
        <member name="M:RiotSharp.RiotApi.GetInstance(System.String,System.Int32,System.Int32)">
            <summary>
            Get the instance of RiotApi.
            </summary>
            <param name="apiKey">The api key.</param>
            <param name="rateLimitPer10s">The 10 seconds rate limit for your production api key.</param>
            <param name="rateLimitPer10m">The 10 minutes rate limit for your production api key.</param>
            <returns>The instance of RiotApi.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetSummoner(RiotSharp.Region,System.Int64)">
            <summary>
            Get a summoner by id synchronously.
            </summary>
            <param name="region">Region in which you wish to look for a summoner.</param>
            <param name="summonerId">Id of the summoner you're looking for.</param>
            <returns>A summoner.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetSummonerAsync(RiotSharp.Region,System.Int64)">
            <summary>
            Get a summoner by id asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for a summoner.</param>
            <param name="summonerId">Id of the summoner you're looking for.</param>
            <returns>A summoner.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetSummoners(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Get summoners by ids synchronously, you can submit more than 40 summoner ids.
            </summary>
            <param name="region">Region in which you wish to look for summoners.</param>
            <param name="summonerIds">List of ids of the summoners you're looking for, not limited to 40.</param>
            <returns>A list of summoners.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetSummonersAsync(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Get summoners by ids asynchronously, you can submit more than 40 summoner ids.
            </summary>
            <param name="region">Region in which you wish to look for summoners.</param>
            <param name="summonerIds">List of ids of the summoners you're looking for, not limited to 40.</param>
            <returns>A list of summoners.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetSummoner(RiotSharp.Region,System.String)">
            <summary>
            Get a summoner by name synchronously.
            </summary>
            <param name="region">Region in which you wish to look for a summoner.</param>
            <param name="summonerName">Name of the summoner you're looking for.</param>
            <returns>A summoner.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetSummonerAsync(RiotSharp.Region,System.String)">
            <summary>
            Get a summoner by name asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for a summoner.</param>
            <param name="summonerName">Name of the summoner you're looking for.</param>
            <returns>A summoner.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetSummoners(RiotSharp.Region,System.Collections.Generic.List{System.String})">
            <summary>
            Get summoners by names synchronously, you can submit more than 40 summoner names.
            </summary>
            <param name="region">Region in which you wish to look for summoners.</param>
            <param name="summonerNames">List of names of the summoners you're looking for, not limited to 40.</param>
            <returns>A list of summoners.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetSummonersAsync(RiotSharp.Region,System.Collections.Generic.List{System.String})">
            <summary>
            Get summoners by names asynchronously, you can submit more than 40 summoner names.
            </summary>
            <param name="region">Region in which you wish to look for summoners.</param>
            <param name="summonerNames">List of names of the summoners you're looking for, not limited to 40.</param>
            <returns>A list of summoners.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetSummonerName(RiotSharp.Region,System.Int64)">
            <summary>
            Get a  summoner's name and id synchronously.
            </summary>
            <param name="region">Region in which you wish to look for summoners.</param>
            <param name="summonerId">Id of the summoner you're looking for.</param>
            <returns>A summoner (id and name).</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetSummonerNameAsync(RiotSharp.Region,System.Int64)">
            <summary>
            Get a  summoner's name and id asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for summoners.</param>
            <param name="summonerId">Id of the summoner you're looking for.</param>
            <returns>A summoner (id and name).</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetSummonerNames(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Get a list of summoner's names and ids synchronously, you can submit more than 40 summoner ids.
            </summary>
            <param name="region">Region in which you wish to look for summoners.</param>
            <param name="summonerIds">List of ids of the summoners you're looking for, not limited to 40.</param>
            <returns>A list of ids and names of summoners.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetSummonerNamesAsync(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Get a list of summoner's names and ids asynchronously, you can submit more than 40 summoner ids.
            </summary>
            <param name="region">Region in which you wish to look for summoners.</param>
            <param name="summonerIds">List of ids of the summoners you're looking for, not limited to 40.</param>
            <returns>A list of ids and names of summoners.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetChampions(RiotSharp.Region,System.Boolean)">
            <summary>
            Get the list of champions by region synchronously.
            </summary>
            <param name="region">Region in which you wish to look for champions.</param>
            <param name="freeToPlay">If set to true will return only free to play champions.</param>
            <returns>A list of champions.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetChampionsAsync(RiotSharp.Region,System.Boolean)">
            <summary>
            Get the list of champions by region asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for champions.</param>
            <param name="freeToPlay">If set to true will return only free to play champions.</param>
            <returns>A list of champions.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetChampion(RiotSharp.Region,System.Int32)">
            <summary>
            Get a champion from its id synchronously.
            </summary>
            <param name="region">Region in which you wish to look for a champion.</param>
            <param name="championId">Id of the champion you're looking for.</param>
            <returns>A champion.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetChampionAsync(RiotSharp.Region,System.Int32)">
            <summary>
            Get a champion from its id asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for a champion.</param>
            <param name="championId">Id of the champion you're looking for.</param>
            <returns>A champion.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetMasteryPages(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Get mastery pages for a list of summoner ids synchronously, you can submit more than 40 summoner ids.
            </summary>
            <param name="region">Region in which you wish to look for mastery pages for a list of summoners.</param>
            <param name="summonerIds">A list of summoners' ids for which you wish to retrieve the masteries, not
            limited to 40.</param>
            <returns>A dictionary where the keys are the summoners' ids and the values are lists of mastery pages.
            </returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetMasteryPagesAsync(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Get mastery pages for a list of summoner ids asynchronously, you can submit more than 40 summoner ids.
            </summary>
            <param name="region">Region in which you wish to look for mastery pages for a list of summoners.</param>
            <param name="summonerIds">A list of summoners' ids for which you wish to retrieve the masteries, not
            limited to 40.</param>
            <returns>A dictionary where the keys are the summoners' ids and the values are lists of mastery pages.
            </returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetRunePages(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Get rune pages for a list of summoner ids synchronously, you can submit more than 40 summoner ids.
            </summary>
            <param name="region">Region in which you wish to look for mastery pages for a list of summoners.</param>
            <param name="summonerIds">A list of summoner ids for which you wish to retrieve the masteries, not limited
            to 40.</param>
            <returns>A dictionary where the keys are the summoners' ids and the values are lists of rune pages.
            </returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetRunePagesAsync(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Get rune pages for a list of summoner ids asynchronously, you can submit more than 40 summoner ids.
            </summary>
            <param name="region">Region in which you wish to look for mastery pages for a list of summoners.</param>
            <param name="summonerIds">A list of summoner ids for which you wish to retrieve the masteries, not limited
            to 40.</param>
            <returns>A dictionary where the keys are the summoners' ids and the values are lists of rune pages.
            </returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetLeagues(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Retrieves the league entries for the specified summoners, you can submit more than 10 summoner ids.
            </summary>
            <param name="region">Region in which you wish to look for the leagues of summoners.</param>
            <param name="summonerIds">The summoner ids, not limited to 10.</param>
            <returns>A map of list of league entries indexed by the summoner id.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetLeaguesAsync(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Retrieves the league entries for the specified summoners asynchronously, you can submit more than 10
            summoner ids.
            </summary>
            <param name="region">Region in which you wish to look for the leagues of summoners.</param>
            <param name="summonerIds">The summoner ids, not limited to 10.</param>
            <returns>A map of list of league entries indexed by the summoner id.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetEntireLeagues(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Retrieves the entire leagues for the specified summoners, you can submit more than 10 summoner ids.
            </summary>
            <param name="region">Region in which you wish to look for the leagues of summoners.</param>
            <param name="summonerIds">The summoner ids, not limited to 10.</param>
            <returns>A map of list of leagues indexed by the summoner id.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetEntireLeaguesAsync(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Retrieves the entire leagues for the specified summoners asynchronously, you can submit more than 10
            summoner ids.
            </summary>
            <param name="region">Region in which you wish to look for the leagues of summoners.</param>
            <param name="summonerIds">The summoner ids, not limited to 10.</param>
            <returns>A map of list of leagues indexed by the summoner id.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetLeagues(RiotSharp.Region,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves the league entries for the specified teams, you can submit more than 10 team ids.
            </summary>
            <param name="region">Region in which you wish to look for the leagues of teams.</param>
            <param name="teamIds">The team ids, not limited to 10.</param>
            <returns>A map of list of leagues indexed by the team id.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetLeaguesAsync(RiotSharp.Region,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves the league entries for the specified teams asynchronously, you can submit more than 10 team ids.
            </summary>
            <param name="region">Region in which you wish to look for the leagues of teams.</param>
            <param name="teamIds">The team ids, not limited to 10.</param>
            <returns>A map of list of league entries indexed by the team id.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetEntireLeagues(RiotSharp.Region,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves the entire leagues for the specified teams, you can submit more than 10 team ids.
            </summary>
            <param name="region">Region in which you wish to look for the leagues of teams.</param>
            <param name="teamIds">The team ids, not limited to 10.</param>
            <returns>A map of list of entire leagues indexed by the team id.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetEntireLeaguesAsync(RiotSharp.Region,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves the entire leagues for the specified teams asynchronously, you can submit more than 10 team ids.
            </summary>
            <param name="region">Region in which you wish to look for the leagues of teams.</param>
            <param name="teamIds">The team ids, not limited to 10.</param>
            <returns>A map of list of entire leagues indexed by the team id.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetChallengerLeague(RiotSharp.Region,RiotSharp.Queue)">
            <summary>
            Get the challenger league for a particular queue.
            </summary>
            <param name="region">Region in which you wish to look for a challenger league.</param>
            <param name="queue">Queue in which you wish to look for a challenger league.</param>
            <returns>A league which contains all the challengers for this specific region and queue.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetChallengerLeagueAsync(RiotSharp.Region,RiotSharp.Queue)">
            <summary>
            Get the challenger league for a particular queue asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for a challenger league.</param>
            <param name="queue">Queue in which you wish to look for a challenger league.</param>
            <returns>A league which contains all the challengers for this specific region and queue.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetMasterLeague(RiotSharp.Region,RiotSharp.Queue)">
            <summary>
            Get the master league for a particular queue.
            </summary>
            <param name="region">Region in which you wish to look for a master league.</param>
            <param name="queue">Queue in which you wish to look for a master league.</param>
            <returns>A league which contains all the masters for this specific region and queue.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetMasterLeagueAsync(RiotSharp.Region,RiotSharp.Queue)">
            <summary>
            Get the master league for a particular queue asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for a master league.</param>
            <param name="queue">Queue in which you wish to look for a master league.</param>
            <returns>A league which contains all the masters for this specific region and queue.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetTeams(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Get the teams for the specified ids synchronously, you can submit more than 10 summoner ids.
            </summary>
            <param name="region">Region in which the teams are located.</param>
            <param name="summonerIds">List of summoner ids, not limited to 10.</param>
            <returns>A map of teams indexed by summoner id.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetTeamsAsync(RiotSharp.Region,System.Collections.Generic.List{System.Int64})">
            <summary>
            Get the teams for the specified ids asynchronously, you can submit more than 10 summoner ids.
            </summary>
            <param name="region">Region in which the teams are located.</param>
            <param name="summonerIds">List of summoner ids, not limited to 10.</param>
            <returns>A map of teams indexed by summoner id.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetTeams(RiotSharp.Region,System.Collections.Generic.List{System.String})">
            <summary>
            Get the teams for the specified ids synchronously, you can submit more than 10 team ids.
            </summary>
            <param name="region">Region in which the teams are located.</param>
            <param name="teamIds">List of the team ids, not limited to 10.</param>
            <returns>A map of teams indexed by their id.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetTeamsAsync(RiotSharp.Region,System.Collections.Generic.List{System.String})">
            <summary>
            Get the teams for the specified ids asynchronously, you can submit more than 10 team ids.
            </summary>
            <param name="region">Region in which the teams are located.</param>
            <param name="teamIds">List of the team ids, not limited to 10.</param>
            <returns>A map of teams indexed by their id.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetMatch(RiotSharp.Region,System.Int64,System.Boolean)">
            <summary>
            Get match information about a specific match synchronously.
            </summary>
            <param name="region">Region in which the match took place.</param>
            <param name="matchId">The match ID to be retrieved.</param>
            <param name="includeTimeline">Whether or not to include timeline information.</param>
            <returns>A match detail object containing information about the match.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetMatchAsync(RiotSharp.Region,System.Int64,System.Boolean)">
            <summary>
            Get match information about a specific match asynchronously.
            </summary>
            <param name="region">Region in which the match took place.</param>
            <param name="matchId">The match ID to be retrieved.</param>
            <param name="includeTimeline">Whether or not to include timeline information.</param>
            <returns>A match detail object containing information about the match.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetMatchList(RiotSharp.Region,System.Int64,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{RiotSharp.Queue},System.Collections.Generic.List{RiotSharp.MatchEndpoint.Enums.Season},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get the list of matches of a specific summoner synchronously.
            </summary>
            <param name="region">Region in which the summoner is.</param>
            <param name="summonerId">Summoner ID for which you want to retrieve the match list.</param>
            <param name="championIds">List of champion IDS to use for fetching games.</param>
            <param name="rankedQueues">List of ranked queue types to use for fetching games. Non-ranked queue types
             will be ignored.</param>
            <param name="seasons">List of seasons for which to filter the match list by.</param>
            <param name="beginTime">The earliest date you wish to get matches from.</param>
            <param name="endTime">The latest date you wish to get matches from.</param>
            <param name="beginIndex">The begin index to use for fetching matches.</param>
            <param name="endIndex">The end index to use for fetching matches.</param>
            <returns>A list of Match references object.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetMatchListAsync(RiotSharp.Region,System.Int64,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{RiotSharp.Queue},System.Collections.Generic.List{RiotSharp.MatchEndpoint.Enums.Season},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get the list of matches of a specific summoner asynchronously.
            </summary>
            <param name="region">Region in which the summoner is.</param>
            <param name="summonerId">Summoner ID for which you want to retrieve the match list.</param>
            <param name="championIds">List of champion IDS to use for fetching games.</param>
            <param name="rankedQueues">List of ranked queue types to use for fetching games. Non-ranked queue types
             will be ignored.</param>
            <param name="seasons">List of seasons for which to filter the match list by.</param>
            <param name="beginTime">The earliest date you wish to get matches from.</param>
            <param name="endTime">The latest date you wish to get matches from.</param>
            <param name="beginIndex">The begin index to use for fetching matches.</param>
            <param name="endIndex">The end index to use for fetching matches.</param>
            <returns>A list of Match references object.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetStatsSummaries(RiotSharp.Region,System.Int64)">
            <summary>
            Get player stats by summoner ID synchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve player stats.</param>
            <returns>A list of player stats summaries.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetStatsSummariesAsync(RiotSharp.Region,System.Int64)">
            <summary>
            Get player stats by summoner ID asynchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve player stats.</param>
            <returns>A list of player stats summaries.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetStatsSummaries(RiotSharp.Region,System.Int64,RiotSharp.StatsEndpoint.Season)">
            <summary>
            Get player stats by summoner ID synchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve player stats.</param>
            <param name="season">If specified, stats for the given season are returned.
            Otherwise, stats for the current season are returned.</param>
            <returns>A list of player stats summaries.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetStatsSummariesAsync(RiotSharp.Region,System.Int64,RiotSharp.StatsEndpoint.Season)">
            <summary>
            Get player stats by summoner ID asynchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve player stats.</param>
            <param name="season">If specified, stats for the given season are returned.
            Otherwise, stats for the current season are returned.</param>
            <returns>A list of player stats summaries.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetStatsRanked(RiotSharp.Region,System.Int64)">
            <summary>
            Get ranked stats by summoner ID synchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve ranked stats.</param>
            <returns>A list of champion stats.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetStatsRankedAsync(RiotSharp.Region,System.Int64)">
            <summary>
            Get ranked stats by summoner ID asynchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve ranked stats.</param>
            <returns>A list of champion stats.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetStatsRanked(RiotSharp.Region,System.Int64,RiotSharp.StatsEndpoint.Season)">
            <summary>
            Get ranked stats by summoner ID synchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve ranked stats.</param>
            <param name="season">If specified, stats for the given season are returned.
            Otherwise, stats for the current season are returned.</param>
            <returns>A list of champion stats.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetStatsRankedAsync(RiotSharp.Region,System.Int64,RiotSharp.StatsEndpoint.Season)">
            <summary>
            Get ranked stats by summoner ID asynchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve ranked stats.</param>
            <param name="season">If specified, stats for the given season are returned.
            Otherwise, stats for the current season are returned.</param>
            <returns>A list of champion stats.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetRecentGames(RiotSharp.Region,System.Int64)">
            <summary>
            Get the 10 most recent games by summoner ID synchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve recent games.</param>
            <returns>A list of the 10 most recent games.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetRecentGamesAsync(RiotSharp.Region,System.Int64)">
            <summary>
            Get the 10 most recent games by summoner ID asynchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve recent games.</param>
            <returns>A list of the 10 most recent games.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetCurrentGame(RiotSharp.Platform,System.Int64)">
            <summary>
            Gets the current game by summoner ID synchronously.
            </summary>
            <param name="platform">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve current game.</param>
            <returns>Current game of the summoner.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetCurrentGameAsync(RiotSharp.Platform,System.Int64)">
            <summary>
            Gets the current game by summoner ID asynchronously.
            </summary>
            <param name="platform">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve current game.</param>
            <returns>Current game of the summoner.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetFeaturedGames(RiotSharp.Region)">
            <summary>
            Gets the featured games by region synchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <returns>Featured games for the region.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetFeaturedGamesAsync(RiotSharp.Region)">
            <summary>
            Gets the featured games by region asynchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <returns>Featured games for the region.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetChampionMastery(RiotSharp.Platform,System.Int64,System.Int32)">
            <summary>
            Gets a champion mastery by summoner ID synchronously.
            </summary>
            <param name="platform">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve champion mastery.</param>
            <param name="championId">ID of the champion for which to retrieve mastery.</param>
            <returns>Champion mastery for summoner ID and champion ID.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetChampionMasteryAsync(RiotSharp.Platform,System.Int64,System.Int32)">
            <summary>
            Gets a champion mastery by summoner ID asynchronously.
            </summary>
            <param name="platform">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve champion mastery.</param>
            <param name="championId">ID of the champion for which to retrieve mastery.</param>
            <returns>Champion mastery for summoner ID and champion ID.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetAllChampionsMasteryEntries(RiotSharp.Platform,System.Int64)">
            <summary>
            Gets all champions mastery by summoner ID synchronously.
            </summary>
            <param name="platform">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve champion mastery.</param>
            <returns>All champions mastery entries for the specified summoner ID.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetAllChampionsMasteryEntriesAsync(RiotSharp.Platform,System.Int64)">
            <summary>
            Gets all champions mastery by summoner ID asynchronously.
            </summary>
            <param name="platform">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve champion mastery.</param>
            <returns>All champions mastery entries for the specified summoner ID.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetTotalChampionMasteryScore(RiotSharp.Platform,System.Int64)">
            <summary>
            Get a player's total champion mastery score,
            which is the sum of individual champion mastery levels, by summoner ID synchronously.
            </summary>
            <param name="platform">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve champion mastery.</param>
            <returns>Total champion mastery score for summoner ID.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetTotalChampionMasteryScoreAsync(RiotSharp.Platform,System.Int64)">
            <summary>
            Get a player's total champion mastery score,
            which is the sum of individual champion mastery levels, by summoner ID asynchronously.
            </summary>
            <param name="platform">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve champion mastery.</param>
            <returns>Total champion mastery score for summoner ID.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetTopChampionsMasteryEntries(RiotSharp.Platform,System.Int64,System.Int32)">
            <summary>
            Gets specified number of top champion mastery entries,
            sorted by number of champion points descending, by summoner ID synchronously.
            </summary>
            <param name="platform">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve champion mastery.</param>
            <param name="count">Number of entries to retrieve, defaults to 3.</param>
            <returns>A list of the top champion mastery entries for the specified summoner ID.</returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetTopChampionsMasteryEntriesAsync(RiotSharp.Platform,System.Int64,System.Int32)">
            <summary>
            Gets specified number of top champion mastery entries,
            sorted by number of champion points descending, by summoner ID asynchronously.
            </summary>
            <param name="platform">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve champion mastery.</param>
            <param name="count">Number of entries to retrieve, defaults to 3.</param>
            <returns>A list of the top champion mastery entries for the specified summoner ID.</returns>
        </member>
        <member name="T:RiotSharp.TeamEndpoint.MatchHistorySummary">
            <summary>
            Summary of the match history of the team (Team API).
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MatchHistorySummary.Assists">
            <summary>
            Number of assists.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MatchHistorySummary.Date">
            <summary>
            Date when the match took place.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MatchHistorySummary.Deaths">
            <summary>
            Number of deaths overall.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MatchHistorySummary.GameId">
            <summary>
            Game id.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MatchHistorySummary.GameMode">
            <summary>
            Game mode.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MatchHistorySummary.Invalid">
            <summary>
            Boolean specifying if the match was invalid.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MatchHistorySummary.Kills">
            <summary>
            Number of kills.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MatchHistorySummary.MapId">
            <summary>
            Id of the map.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MatchHistorySummary.OpposingTeamKills">
            <summary>
            Number of kills for the opposing team.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MatchHistorySummary.OpposingTeamName">
            <summary>
            Name of the opposite team.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MatchHistorySummary.Win">
            <summary>
            Match won if true, lost if false.
            </summary>
        </member>
        <member name="T:RiotSharp.TeamEndpoint.MessageOfDay">
            <summary>
            Message of the day of the team (Team API).
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MessageOfDay.CreateDate">
            <summary>
            Date of the message creation.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MessageOfDay.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.MessageOfDay.Version">
            <summary>
            Version of the message.
            </summary>
        </member>
        <member name="T:RiotSharp.TeamEndpoint.Roster">
            <summary>
            Roster of the team (Team API).
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Roster.MemberList">
            <summary>
            List of the team members of the roster.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Roster.OwnerId">
            <summary>
            Id of the owner of the team.
            </summary>
        </member>
        <member name="T:RiotSharp.TeamEndpoint.Team">
            <summary>
            Class representing a Team in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.CreateDate">
            <summary>
            Date of the team creation.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.FullId">
            <summary>
            Team id.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.LastGameDate">
            <summary>
            Date of the last game.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.LastJoinDate">
            <summary>
            Date when the last member joined the team.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.LastJoinedRankedTeamQueueDate">
            <summary>
            Date when the team last joined their queue.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.MatchHistory">
            <summary>
            Match history.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.ModifyDate">
            <summary>
            Last time the team was modified.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.Name">
            <summary>
            Name of the team.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.Roster">
            <summary>
            Roster of the team.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.SecondLastJoinDate">
            <summary>
            Date when the second last member joined the team..
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.Status">
            <summary>
            Status of the team.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.Tag">
            <summary>
            Tag of the team.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.TeamStatDetails">
            <summary>
            Stat summary of the team.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.Team.ThirdLastJoinDate">
            <summary>
            Date when the third last member joined the team.
            </summary>
        </member>
        <member name="T:RiotSharp.TeamEndpoint.TeamMemberInfo">
            <summary>
            Information about team members (Team API).
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.TeamMemberInfo.InviteDate">
            <summary>
            Date this team member was invited.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.TeamMemberInfo.JoinDate">
            <summary>
            Date this team member joined the team.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.TeamMemberInfo.PlayerId">
            <summary>
            Id of the team member.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.TeamMemberInfo.Status">
            <summary>
            Status of the team member (owner, member, etc).
            </summary>
        </member>
        <member name="T:RiotSharp.TeamEndpoint.TeamStatDetail">
            <summary>
            Team stats (Team API).
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.TeamStatDetail.AverageGamesPlayed">
            <summary>
            Number of games played on average.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.TeamStatDetail.Losses">
            <summary>
            Number of losses.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.TeamStatDetail.TeamStatType">
            <summary>
            Type of team stat.
            </summary>
        </member>
        <member name="P:RiotSharp.TeamEndpoint.TeamStatDetail.Wins">
            <summary>
            Number of wins.
            </summary>
        </member>
        <member name="T:RiotSharp.TournamentEndpoint.Enums.TournamentEventType">
            <summary>
                The type of event that was triggered in the lobby (Tournament API).
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentEventType.PracticeGameCreatedEvent">
            <summary>
            Lobby created.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentEventType.PlayerJoinedGameEvent">
            <summary>
            Player joins lobby.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentEventType.PlayerSwitchedTeamEvent">
            <summary>
            Player switches teams.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentEventType.PlayerQuitGameEvent">
            <summary>
            Player leaves lobby
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentEventType.ChampSelectStartedEvent">
            <summary>
            Champion selection begins.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentEventType.GameAllocationStartedEvent">
            <summary>
            Loading screen begins.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentEventType.GameAllocatedToLsmEvent">
            <summary>
            Game begins.
            </summary>
        </member>
        <member name="T:RiotSharp.TournamentEndpoint.Enums.TournamentMapType">
            <summary>
                Mode of the game (Tournament API).
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentMapType.SummonersRift">
            <summary>
            Summoner's Rift map.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentMapType.TwistedTreeline">
            <summary>
            Twisted Treeline map.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentMapType.CrystalScar">
            <summary>
            Crystal Scar (Dominion) map.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentMapType.HowlingAbyss">
            <summary>
            Howling Abyss (ARAM) map.
            </summary>
        </member>
        <member name="T:RiotSharp.TournamentEndpoint.Enums.TournamentPickType">
            <summary>
                Pick type of the game (Tournament API).
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentPickType.BlindPick">
            <summary>
            Blind pick mode.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentPickType.DraftMode">
            <summary>
            Draft pick mode.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentPickType.AllRandom">
            <summary>
            All random mode.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentPickType.TournamentDraft">
            <summary>
            Tournament draft mode (adds ability to pause).
            </summary>
        </member>
        <member name="T:RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType">
            <summary>
                Spectator type of the game (Tournament API).
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType.None">
            <summary>
            No spectators allowed.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType.LobbyOnly">
            <summary>
            Spectators only allowed in the lobby.
            </summary>
        </member>
        <member name="F:RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType.All">
            <summary>
            Spectators allowed in the lobby and the game itself.
            </summary>
        </member>
        <member name="T:RiotSharp.TournamentEndpoint.Tournament">
            <summary>
                Class representing a tournament for the Tournament API.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.Tournament.Id">
            <summary>
                Tournament's ID
            </summary>
        </member>
        <member name="M:RiotSharp.TournamentEndpoint.Tournament.CreateTournamentCode(System.Int32,System.Collections.Generic.List{System.Int64},RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType,RiotSharp.TournamentEndpoint.Enums.TournamentPickType,RiotSharp.TournamentEndpoint.Enums.TournamentMapType,System.String)">
            <summary>
                Create a tournament code for the tournament.
            </summary>
            <param name="teamSize">The team size for the tournament code game.</param>
            <param name="allowedSummonerIds">participants</param>
            <param name="spectatorType">The spectator mode for the tournament code game.</param>
            <param name="pickType">The pick mode for tournament code game.</param>
            <param name="mapType">The game map for the tournament code game</param>
            <param name="metadata">The metadata for tournament code.</param>
            <returns>The tournament code.</returns>
        </member>
        <member name="M:RiotSharp.TournamentEndpoint.Tournament.CreateTournamentCodeAsync(System.Int32,System.Collections.Generic.List{System.Int64},RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType,RiotSharp.TournamentEndpoint.Enums.TournamentPickType,RiotSharp.TournamentEndpoint.Enums.TournamentMapType,System.String)">
            <summary>
                Create a tournament code for the tournament asynchronously.
            </summary>
            <param name="teamSize">The team size for the tournament code game.</param>
            <param name="allowedSummonerIds">participants</param>
            <param name="spectatorType">The spectator mode for the tournament code game.</param>
            <param name="pickType">The pick mode for tournament code game.</param>
            <param name="mapType">The game map for the tournament code game</param>
            <param name="metadata">The metadata for tournament code.</param>
            <returns>The tournament code.</returns>
        </member>
        <member name="M:RiotSharp.TournamentEndpoint.Tournament.CreateTournamentCodes(System.Int32,RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType,RiotSharp.TournamentEndpoint.Enums.TournamentPickType,RiotSharp.TournamentEndpoint.Enums.TournamentMapType,System.String,System.Int32)">
            <summary>
                Create multiple tournament codes for the tournament.
            </summary>
            <param name="teamSize">The team size for the tournament code game.</param>
            <param name="spectatorType">The spectator mode for the tournament code game.</param>
            <param name="pickType">The pick mode for tournament code game.</param>
            <param name="mapType">The game map for the tournament code game</param>
            <param name="metadata">The metadata for tournament code.</param>
            <param name="count">The number of codes to be created</param>
            <returns>A list of the created tournament codes</returns>
        </member>
        <member name="M:RiotSharp.TournamentEndpoint.Tournament.CreateTournamentCodesAsync(System.Int32,RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType,RiotSharp.TournamentEndpoint.Enums.TournamentPickType,RiotSharp.TournamentEndpoint.Enums.TournamentMapType,System.String,System.Int32)">
            <summary>
                Create multiple tournament codes for the tournament asynchronously.
            </summary>
            <param name="teamSize">The team size for the tournament code game.</param>
            <param name="spectatorType">The spectator mode for the tournament code game.</param>
            <param name="pickType">The pick mode for tournament code game.</param>
            <param name="mapType">The game map for the tournament code game</param>
            <param name="metadata">The metadata for tournament code.</param>
            <param name="count">The number of codes to be created</param>
            <returns>A list of the created tournament codes</returns>
        </member>
        <member name="T:RiotSharp.TournamentEndpoint.TournamentCodeDetail">
            <summary>
                Class representing the details of a tournament code.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.Code">
            <summary>
                The tournament code.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.Id">
            <summary>
                The tournament code's ID.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.LobbyName">
            <summary>
                The lobby name for the tournament code game.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.Map">
            <summary>
                The game map for the tournament code game.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.MetaData">
            <summary>
                The metadata for tournament code.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.Participants">
            <summary>
                Set of summoner IDs.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.Password">
            <summary>
                The password for the tournament code game.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.PickType">
            <summary>
                The pick mode for tournament code game.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.ProviderId">
            <summary>
                The provider's ID.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.Region">
            <summary>
                The tournament code's region.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.SpectatorType">
            <summary>
                The spectator mode for the tournament code game.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.TeamSize">
            <summary>
                The team size for the tournament code game.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentCodeDetail.TournamentId">
            <summary>
                The tournament's ID.
            </summary>
        </member>
        <member name="M:RiotSharp.TournamentEndpoint.TournamentCodeDetail.Update(System.Collections.Generic.List{System.Int64},System.Nullable{RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType},System.Nullable{RiotSharp.TournamentEndpoint.Enums.TournamentPickType},System.Nullable{RiotSharp.TournamentEndpoint.Enums.TournamentMapType})">
            <summary>
                Update the pick type, map, spectator type, or allowed summoners for a code.
            </summary>
            <param name="allowedSummonerIds">Comma separated list of summoner Ids.</param>
            <param name="spectatorType">The spectator type.</param>
            <param name="pickType">The pick type.</param>
            <param name="mapType">The map type.</param>
        </member>
        <member name="M:RiotSharp.TournamentEndpoint.TournamentCodeDetail.UpdateAsync(System.Collections.Generic.List{System.Int64},System.Nullable{RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType},System.Nullable{RiotSharp.TournamentEndpoint.Enums.TournamentPickType},System.Nullable{RiotSharp.TournamentEndpoint.Enums.TournamentMapType})">
            <summary>
                Update the pick type, map, spectator type, or allowed summoners for a code asynchronously.
            </summary>
            <param name="allowedSummonerIds">Comma separated list of summoner Ids.</param>
            <param name="spectatorType">The spectator type.</param>
            <param name="pickType">The pick type.</param>
            <param name="mapType">The map type.</param>
        </member>
        <member name="M:RiotSharp.TournamentEndpoint.TournamentCodeDetail.Get(System.String)">
            <summary>
                Returns the tournament code object associated with a tournament code string.
            </summary>
            <param name="tournamentCode">The tournament code.</param>
            <returns>the tournament code object associated with a tournament code string.</returns>
        </member>
        <member name="M:RiotSharp.TournamentEndpoint.TournamentCodeDetail.GetAsync(System.String)">
            <summary>
                Returns the tournament code object associated with a tournament code string asynchronously.
            </summary>
            <param name="tournamentCode">The tournament code.</param>
            <returns>the tournament code object associated with a tournament code string.</returns>
        </member>
        <member name="T:RiotSharp.TournamentEndpoint.TournamentLobbyEvent">
            <summary>
            Represents a tournament lobby event in the Riot tournament API.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentLobbyEvent.EventType">
            <summary>
                The type of event that was triggered
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentLobbyEvent.SummonerId">
            <summary>
                The summoner that triggered the event
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentLobbyEvent.Timestamp">
            <summary>
                Timestamp from the event
            </summary>
        </member>
        <member name="T:RiotSharp.TournamentEndpoint.TournamentProvider">
            <summary>
            Represents a tournament provider in the Riot API.
            </summary>
        </member>
        <member name="P:RiotSharp.TournamentEndpoint.TournamentProvider.Id">
            <summary>
            The provider ID.
            </summary>
        </member>
        <member name="M:RiotSharp.TournamentEndpoint.TournamentProvider.CreateTournament(System.String)">
            <summary>
                Creates a tournament for this provider.
            </summary>
            <param name="name">An optional tournament name.</param>
            <returns>A tournament instance.</returns>
        </member>
        <member name="M:RiotSharp.TournamentEndpoint.TournamentProvider.CreateTournamentAsync(System.String)">
            <summary>
                Asynchronously creates a tournament for this provider.
            </summary>
            <param name="name">An optional tournament name.</param>
            <returns>A tournament instance.</returns>
        </member>
        <member name="T:RiotSharp.TournamentRiotApi">
            <summary>
            Entry point for the tournament API.
            </summary>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetInstance(System.String,System.Int32,System.Int32)">
            <summary>
                Get the instance of RiotApi.
            </summary>
            <param name="apiKey">The api key.</param>
            <param name="rateLimitPer10s">The 10 seconds rate limit for your production api key.</param>
            <param name="rateLimitPer10m">The 10 minutes rate limit for your production api key.</param>
            <returns>The instance of RiotApi.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.CreateProvider(RiotSharp.Region,System.String)">
            <summary>
                Creates a tournament provider and returns its ID.
            </summary>
            <param name="region">The region in which the provider will be running tournaments.</param>
            <param name="url">
                The provider's callback URL to which tournament game results in this region should be posted. The URL
                must be well-formed, use the http or https protocol, and use the default port for the protocol (http URLs must use
                port 80, https URLs must use port 443).
            </param>
            <returns>The ID of the provider.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.CreateProviderAsync(RiotSharp.Region,System.String)">
            <summary>
                Creates a tournament provider and returns its object.
            </summary>
            <param name="region">The region in which the provider will be running tournaments.</param>
            <param name="url">
                The provider's callback URL to which tournament game results in this region should be posted. The URL
                must be well-formed, use the http or https protocol, and use the default port for the protocol (http URLs must use
                port 80, https URLs must use port 443).
            </param>
            <returns>The ID of the provider.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.CreateTournament(System.Int32,System.String)">
            <summary>
                Creates a tournament and returns its object.
            </summary>
            <param name="providerId">The provider ID to specify the regional registered provider data to associate this tournament.</param>
            <param name="name">The optional name of the tournament.</param>
            <returns>The ID of the tournament.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.CreateTournamentAsync(System.Int32,System.String)">
            <summary>
                Creates a tournament and returns its object.
            </summary>
            <param name="providerId">The provider ID to specify the regional registered provider data to associate this tournament.</param>
            <param name="name">The optional name of the tournament.</param>
            <returns>The ID of the tournament.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.CreateTournamentCode(System.Int32,System.Int32,System.Collections.Generic.List{System.Int64},RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType,RiotSharp.TournamentEndpoint.Enums.TournamentPickType,RiotSharp.TournamentEndpoint.Enums.TournamentMapType,System.String)">
            <summary>
                Create a tournament code for the given tournament id.
            </summary>
            <param name="tournamentId">The tournament ID</param>
            <param name="teamSize">The team size of the game. Valid values are 1-5.</param>
            <param name="allowedSummonerIds">
                Optional list of participants in order to validate the players eligible to join the
                lobby. NOTE: We currently do not enforce participants at the team level, but rather the aggregate of teamOne and
                teamTwo. We may add the ability to enforce at the team level in the future.
            </param>
            <param name="spectatorType">The spectator type of the game.</param>
            <param name="pickType">The pick type of the game.</param>
            <param name="mapType">The map type of the game.</param>
            <param name="metadata">
                Optional string that may contain any data in any format, if specified at all. Used to denote any
                custom information about the game.
            </param>
            <returns>The tournament code in string format.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.CreateTournamentCodeAsync(System.Int32,System.Int32,System.Collections.Generic.List{System.Int64},RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType,RiotSharp.TournamentEndpoint.Enums.TournamentPickType,RiotSharp.TournamentEndpoint.Enums.TournamentMapType,System.String)">
            <summary>
                Create a tournament code for the given tournament id.
            </summary>
            <param name="tournamentId">The tournament ID</param>
            <param name="teamSize">The team size of the game. Valid values are 1-5.</param>
            <param name="allowedSummonerIds">
                Optional list of participants in order to validate the players eligible to join the
                lobby. NOTE: We currently do not enforce participants at the team level, but rather the aggregate of teamOne and
                teamTwo. We may add the ability to enforce at the team level in the future.
            </param>
            <param name="spectatorType">The spectator type of the game.</param>
            <param name="pickType">The pick type of the game.</param>
            <param name="mapType">The map type of the game.</param>
            <param name="metadata">
                Optional string that may contain any data in any format, if specified at all. Used to denote any
                custom information about the game.
            </param>
            <returns>The tournament code in string format.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.CreateTournamentCodes(System.Int32,System.Int32,RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType,RiotSharp.TournamentEndpoint.Enums.TournamentPickType,RiotSharp.TournamentEndpoint.Enums.TournamentMapType,System.String,System.Int32)">
            <summary>
                Create multiple tournament codes for the given tournament id.
            </summary>
            <param name="tournamentId">The tournament ID</param>
            <param name="teamSize">The team size of the game. Valid values are 1-5.</param>
            <param name="spectatorType">The spectator type of the game.</param>
            <param name="pickType">The pick type of the game.</param>
            <param name="mapType">The map type of the game.</param>
            <param name="metadata">
                Optional string that may contain any data in any format, if specified at all. Used to denote any
                custom information about the game.
            </param>
            <param name="count">The number of codes to create (max 1000).</param>
            <returns>A list of tournament codes in string format.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.CreateTournamentCodesAsync(System.Int32,System.Int32,RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType,RiotSharp.TournamentEndpoint.Enums.TournamentPickType,RiotSharp.TournamentEndpoint.Enums.TournamentMapType,System.String,System.Int32)">
            <summary>
                Create multiple tournament codes for the given tournament id.
            </summary>
            <param name="tournamentId">The tournament ID</param>
            <param name="teamSize">The team size of the game. Valid values are 1-5.</param>
            <param name="spectatorType">The spectator type of the game.</param>
            <param name="pickType">The pick type of the game.</param>
            <param name="mapType">The map type of the game.</param>
            <param name="metadata">
                Optional string that may contain any data in any format, if specified at all. Used to denote any
                custom information about the game.
            </param>
            <param name="count">The number of codes to create (max 1000).</param>
            <returns>A list of tournament codes in string format.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetTournamentCodeDetails(System.String)">
            <summary>
                Returns the details of a certain tournament code.
            </summary>
            <param name="tournamentCode">The tournament code in string format.</param>
            <returns>TournamentCodeDetail object with details of the tournament code.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetTournamentCodeDetailsAsync(System.String)">
            <summary>
                Returns the details of a certain tournament code.
            </summary>
            <param name="tournamentCode">The tournament code in string format.</param>
            <returns>TournamentCodeDetail object with details of the tournament code.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetTournamentLobbyEvents(System.String)">
            <summary>
                Gets a list of lobby events by tournament code.
            </summary>
            <param name="tournamentCode">A tournament code in string format.</param>
            <returns>List of TournamentLobbyEvents.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetTournamentLobbyEventsAsync(System.String)">
            <summary>
                Gets a list of lobby events by tournament code.
            </summary>
            <param name="tournamentCode">A tournament code in string format.</param>
            <returns>List of TournamentLobbyEvents.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetTournamentMatch(RiotSharp.Region,System.Int64,System.String,System.Boolean)">
            <summary>
                Retrieve match by match ID and tournament code.
            </summary>
            <param name="region">The region of the match.</param>
            <param name="matchId">The ID of the match.</param>
            <param name="tournamentCode">The tournament code of the match.</param>
            <param name="includeTimeline">Flag indicating whether or not to include match timeline data.</param>
            <returns>MatchDetail object.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetTournamentMatchAsync(RiotSharp.Region,System.Int64,System.String,System.Boolean)">
            <summary>
                Retrieve match by match ID and tournament code.
            </summary>
            <param name="region">The region of the match.</param>
            <param name="matchId">The ID of the match.</param>
            <param name="tournamentCode">The tournament code of the match.</param>
            <param name="includeTimeline">Flag indicating whether or not to include match timeline data.</param>
            <returns>MatchDetail object.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetTournamentMatchId(RiotSharp.Region,System.String)">
            <summary>
                Retrieve match IDs by tournament code.
            </summary>
            <param name="region">The region of the match.</param>
            <param name="tournamentCode">The tournament code of the match.</param>
            <returns>The match id of the match played with the tournament code entered.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetTournamentMatchIdAsync(RiotSharp.Region,System.String)">
            <summary>
                Retrieve match IDs by tournament code.
            </summary>
            <param name="region">The region of the match.</param>
            <param name="tournamentCode">The tournament code of the match.</param>
            <returns>The match id of the match played with the tournament code entered.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.UpdateTournamentCode(System.String,System.Collections.Generic.List{System.Int64},System.Nullable{RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType},System.Nullable{RiotSharp.TournamentEndpoint.Enums.TournamentPickType},System.Nullable{RiotSharp.TournamentEndpoint.Enums.TournamentMapType})">
            <summary>
                Update the pick type, map, spectator type, or allowed summoners for a code.
            </summary>
            <param name="tournamentCode">The tournament code to update</param>
            <param name="allowedSummonerIds">List of summoner id's.</param>
            <param name="spectatorType">The spectator type.</param>
            <param name="pickType">The pick type.</param>
            <param name="mapType">The map type.</param>
            <returns>Success value.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.UpdateTournamentCodeAsync(System.String,System.Collections.Generic.List{System.Int64},System.Nullable{RiotSharp.TournamentEndpoint.Enums.TournamentSpectatorType},System.Nullable{RiotSharp.TournamentEndpoint.Enums.TournamentPickType},System.Nullable{RiotSharp.TournamentEndpoint.Enums.TournamentMapType})">
            <summary>
                Update the pick type, map, spectator type, or allowed summoners for a code.
            </summary>
            <param name="tournamentCode">The tournament code to update</param>
            <param name="allowedSummonerIds">List of summoner id's.</param>
            <param name="spectatorType">The spectator type.</param>
            <param name="pickType">The pick type.</param>
            <param name="mapType">The map type.</param>
            /// <returns>Success value.</returns>
        </member>
    </members>
</doc>
