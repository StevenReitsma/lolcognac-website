@using System
@using System.Linq
@using System.Web
@using LoLTournament.Models
@model TimetableIndexViewModel

<h2>Registered teams</h2>

@if (DateTime.Now > new DateTime(2015, 2, 19))
{
    <div class="alert alert-warning" role="alert">Registration is closed.</div>
}
else if (Model.Teams.Count() >= 32)
{
    <div class="alert alert-warning" role="alert">The tournament is full. However, you can still register. If you have more RU students in your team than there are RU students in another team, you will take their place. <strong>The list below is not yet final</strong>. 20 February, you will receive an email telling you whether you can participate or not. The higher you are on the list, the less likely you are to descend into the waiting list. If you have five RU students in your team you cannot descend at all.</div>
}
else if (Model.Teams.Count() == 31)
{
    <div class="alert alert-warning" role="alert">There is only <b>@(32 - Model.Teams.Count())</b> more spot available.</div>
}
else
{
    <div class="alert alert-warning" role="alert">There are only <b>@(32 - Model.Teams.Count())</b> more spots available.</div>
}

<h3>Registered teams</h3>
@if (!Model.Teams.Any())
{
    <p>No teams registered yet.</p>
}
else
{
    <ul>
        @{ int i = 0; }
        @foreach (var t in Model.Teams)
        {
            i++;
            <li>
                @t.Name
                @if (HttpContext.Current.Request.Params["admin_method"] == "GiveMMR")
                {
                    <strong>RU: @t.AmountOfRuStudents | MMR: @Math.Round(t.MMR)</strong>
                }
                @if (i == 32)
                {
                    break;
                    <hr />
                    <strong>Waiting list:</strong>
                }
            </li>
        }
    </ul>
}

@if (Model.TeambuilderParticipants.Any())
{
    <h3>People still looking for a team</h3>
    <p>Do you have room in your team for one of the roles below? Send us an email and we'll get you in touch with each other!</p>
    <ul>
        @foreach (var t in Model.TeambuilderParticipants)
        {
            <li>Someone who prefers to play (in order): <strong>@t.Roles</strong></li>
        }
    </ul>
}